<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Federal Field Notes</title>
  <subtitle>Dispatches from the front lines of Canada&#39;s federal digital transformation.</subtitle>
  <link href="https://federal-field-notes.ca/feed.xml" rel="self" />
  <link href="https:/federal-field-notes.ca" />
  <updated>2022-07-20T00:00:00Z</updated>
  <id>https:/federal-field-notes.ca</id>
  <author>
    <name>Paul Craig</name>
    <email>paul@pcraig3.ca</email>
  </author>
  <entry>
    <title>For the love of God, hire a Designer and a Product Manager</title>
    <link href="https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/" />
    <updated>2022-07-20T00:00:00Z</updated>
    <id>https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/</id>
    <content type="html">
        &lt;nav class=&quot;table-of-contents&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#how-does-it-work-now&quot;&gt;How does it work now?&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#1-the-business-case&quot;&gt;1. The business case&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#2-the-architecture-diagram&quot;&gt;2. The architecture diagram&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#3-the-slide-decks&quot;&gt;3: The slide deck(s)&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#whats-going-wrong-here&quot;&gt;What’s going wrong here?&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#1-what-is-the-thing&quot;&gt;1. What is the thing?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#2-what-is-important-about-the-thing&quot;&gt;2. What is important about the thing?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#wont-somebody-think-of-the-users&quot;&gt;Won’t somebody think of the users?&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#agile-to-the-rescue&quot;&gt;Agile to the rescue?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#recommendations&quot;&gt;Recommendations&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#1-hire-a-designer&quot;&gt;1. Hire a Designer&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#2-hire-a-product-manager&quot;&gt;2. Hire a Product Manager&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#potential-barriers&quot;&gt;Potential barriers&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#the-process-barrier&quot;&gt;The process barrier&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#the-hiring-barrier&quot;&gt;The hiring barrier&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#modern-roles-for-modern-teams&quot;&gt;Modern roles for modern teams&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/nav&gt;&lt;h2 id=&quot;introduction&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#introduction&quot;&gt;&lt;span&gt;Introduction&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As a cool Paul who blogs, like &lt;a href=&quot;https://paulwells.substack.com/&quot;&gt;Paul Wells&lt;/a&gt; or &lt;a href=&quot;http://paulgraham.com/articles.html&quot;&gt;Paul Graham&lt;/a&gt;, not only do I derive tremendous advantage and prestige from my posts every 3 months or so, but I also get to write fun and interesting articles heavy on structural critiques and relatively light on clear solutions. Catching on to this, sometimes folks reach out to say something like: ‘it’s a good analysis of the problem, but “just do agile” isn’t actually a specific-enough solution for me’.&lt;/p&gt;
&lt;p&gt;Traditionally my answer has been (and remains), ‘multi-disciplinary teams with delegated authority.’ As in, teams with all the skills they need to solve the problem building the best solution they can in an iterative way (without needing approval for everything 2 years before). Which sounds good in theory, but I’m sure plenty of folks in various governments have seen agile teams tried without much success. And I totally get it: often you see innovation-y projects that assemble a handful of folks from different parts of the org who then start doing sprints. And that’s a pretty good start (really!), but in my experience there are a couple pieces of the puzzle notably missing if that’s all you do. Teams like this can easily run into unanticipated problems related to facilitation and overall product vision. So, somewhat uncharacteristically, I actually have two really clean recommendations for you in today’s article.&lt;/p&gt;
&lt;p&gt;When I moved between the UK government to a Canadian federal department, one of the largest differences I noticed was in how agile teams were put together. My department in the UK primarily hired people from outside government, already familiar with ‘new ways of working,’ while my Canadian department was mostly moving existing staff into new roles. And that’s great! You’re never too late in your career to learn something new, and many of the folks I met were excited to work in a new way that would ultimately improve outcomes for citizens. But at the end of the day, ‘digital transformation’ is about introducing new tools, new ways of working, new responsibilities, new lots of things. Transforming successfully means you will need to bring in a bit of ‘new’ as well.&lt;/p&gt;
&lt;p&gt;In Canada, I’ve run into two major roadblocks to introducing successful agile delivery:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Firstly, despite an obsession with documentation, somehow we rarely see &lt;strong&gt;an easily-understood representation&lt;/strong&gt; of the thing we’re trying to build.&lt;/li&gt;
&lt;li&gt;Secondly, the traditional approvals-based approach audits &lt;em&gt;specific aspects&lt;/em&gt; of new products, but doesn’t have much to say about &lt;strong&gt;holistic product ownership&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Luckily for us, these two problems map onto two new roles:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Someone responsible for leading the process of arriving at then producing product designs.&lt;/li&gt;
&lt;li&gt;Someone responsible for product strategy, prioritizing feature development, and ensuring business &lt;em&gt;and&lt;/em&gt; user needs are being met.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Or, to speak plainly: hire a Designer, and hire a Product Manager.&lt;/p&gt;
&lt;h2 id=&quot;how-does-it-work-now&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#how-does-it-work-now&quot;&gt;&lt;span&gt;How does it work now?&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the following section, I’ll take you on a whirlwind tour of some of the internal artefacts created in the waterfall product planning cycle, &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#best-practice-note&quot; id=&quot;best-practice-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;based on my recent experience in one of Canada’s largest federal departments&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In a waterfall system, &lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#the-toll-road-to-enterprise-a-thought-experiment&quot;&gt;specific roles have an org-wide accountability for a specific pie slice of every product&lt;/a&gt; — usually they create standardized artefacts used for internal approval. But these groups are narrowly-scoped so by definition they don’t have the full picture, and they aren’t trying to create one either. It’s a bit like if you tried to solve a 100-piece puzzle by giving 10 pieces each to 10 different people.&lt;/p&gt;
&lt;p&gt;But I digress, we have a product to build and only 4 years to get it out the door.&lt;/p&gt;
&lt;h3 id=&quot;1-the-business-case&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#1-the-business-case&quot;&gt;&lt;span&gt;1. The business case&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let’s say we’re building a product to provide answers to people who are flooding our call centers: since &lt;a href=&quot;https://gds.blog.gov.uk/2013/07/25/faqs-why-we-dont-have-them/&quot;&gt;FAQs are passé now&lt;/a&gt;, let’s call it a “Knowledge Base” (KB). Basically, we want to build a product where people can publicly post questions and get written answers from staff (or a chatbot). The next time someone looks up that same question, Google will hopefully send them to the official answer on our Knowledge Base and they won’t need to phone us. So far, so good.&lt;/p&gt;
&lt;p&gt;Now that we have agreed on the solution that we want, we are going to write &lt;strong&gt;a business case&lt;/strong&gt; about it (&lt;a href=&quot;https://www.canada.ca/en/treasury-board-secretariat/services/information-technology-project-management/project-management/guide-project-gating.html#toc8&quot;&gt;sorry “start with the problem” folks, but that’s not how you get funding&lt;/a&gt; — the ‘funding’ phase comes &lt;em&gt;after&lt;/em&gt; your detailed business case). The group writing the business case is a ‘program team’, responsible for initiating and managing &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#program-note&quot; id=&quot;program-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;internal ‘programs’&lt;/a&gt; — usually, programs focus on building or improving services.&lt;/p&gt;
&lt;p&gt;A business case does two things: it describes the outcome we want and estimates what it will take to build it (cost, &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#resources-note&quot; id=&quot;resources-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;resources&lt;/a&gt;, timelines, etc). A business case justifies taking on a given project: by spending &lt;code&gt;x&lt;/code&gt; amount of money, we can build this new system to help our users get answers faster, which will save us money in the long term rather than continuing to pay our call center staff overtime.&lt;/p&gt;
&lt;p&gt;This is what the service being described looks like as a business case:&lt;/p&gt;
&lt;details open=&quot;&quot;&gt;
    &lt;summary&gt;Figure 1: Sample business case&lt;/summary&gt;
    &lt;div&gt;
      &lt;figure&gt;
      &lt;img alt=&quot;Figure 1: Sample business case&quot; src=&quot;https://federal-field-notes.ca/img/articles/kb-1.png&quot; /&gt;
      &lt;figcaption&gt;
      &lt;p&gt;Two pages of a word document, representing a sample business case.&lt;/p&gt;
      &lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;What we get is a large Word doc (comparable to a novella) with rationales, budgets, timeframes, and expected outcomes. Neat! Anyone reading through it should understand the intent and the goals of our new product and get an upfront cost estimate, but there are still &lt;em&gt;a lot&lt;/em&gt; of details to be filled in here. For example, what am I going to see when I am on the homepage? How do people interact with the chatbot?&lt;/p&gt;
&lt;p&gt;So it’s good that we’re on the same (56) page(s), but the potential for misalignment starts at the beginning. Without something more tangible, important gaps in understanding may not be surfaced until much later. If you created a written description of a lamp and then asked 3 people to go into separate rooms and sketch you a lamp, you are going to end up with 3 different lamp designs.&lt;/p&gt;
&lt;p&gt;Okay, so it’s a start, but clearly we still have some work to do. Let’s move onto one of our early technical deliverables: &lt;strong&gt;an application architecture diagram&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&quot;2-the-architecture-diagram&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#2-the-architecture-diagram&quot;&gt;&lt;span&gt;2. The architecture diagram&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Since we’re talking about a big IT system, we are going to need a big IT diagram. At this stage, we look at our current IT infrastructure and see how this new application fits into it. What existing applications do we have, where can our data come from, and where should it end up? What is new, what can we reuse? Answering these questions means modifying our existing diagram so that it also includes our new Knowledge Base.&lt;/p&gt;
&lt;p&gt;Maybe this means adding several new boxes, or maybe only one. Or maybe some of our existing boxes need to be modified and a one or two new arrows added. By the end, we end up with a PDF that might look something like this:&lt;/p&gt;
&lt;details open=&quot;&quot;&gt;
    &lt;summary&gt;Figure 2: Sample architecture diagram&lt;/summary&gt;
    &lt;div&gt;
      &lt;figure&gt;
      &lt;img alt=&quot;Figure 2: Sample architecture diagram&quot; src=&quot;https://federal-field-notes.ca/img/articles/kb-2.png&quot; /&gt;
      &lt;figcaption&gt;
      &lt;p&gt;A sample architecture digram, depecting how our hypothetical new product connects to our also hypothetical IT infrastructure.&lt;/p&gt;
      &lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;For modelling a system, it’s great that we have an architecture diagram — &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#platform-note&quot; id=&quot;platform-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;a little forethought goes a long way&lt;/a&gt;. Of course you want to think this through before jumping into a big new project. But, for the layperson, this is practically indecipherable. &lt;strong&gt;Like our business case, there is no way to look at this representation and imagine how it will actually work in practice.&lt;/strong&gt; Again, what will the homepage look like?&lt;/p&gt;
&lt;p&gt;But maybe this is to be expected: after all, this is a specialized document meant for a specialized group — most people can’t read sheet music either. This isn’t really intended for general consumption, but as a guide to orient our technical decisions and as a reference point when we are considering down-the-road implementations.&lt;/p&gt;
&lt;p&gt;So let’s keep our fingers crossed for the next one: this is the stage when we want general-purpose artefacts to shop around to our stakeholders and get feedback on what we’re building. And (in a marked difference from my time in the UK) almost all of this internal communication between different groups happens via &lt;strong&gt;slide decks&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&quot;3-the-slide-decks&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#3-the-slide-decks&quot;&gt;&lt;span&gt;3: The slide deck(s)&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;At this point we know we are building a product, we have described the outcomes we are trying to achieve, and we have a technical diagram. But we still don’t have an easy way to describe what this new product is to people who are just hearing about it for the first time. And maybe this is the point where it would help to have an easily understood, semi-realistic representation of our new product that we can quickly show people. Or… maybe we whip up something like this:&lt;/p&gt;
&lt;details open=&quot;&quot;&gt;
    &lt;summary&gt;Figure 3: Sample slide from our Knowledge Base slide deck&lt;/summary&gt;
    &lt;div&gt;
      &lt;figure&gt;
      &lt;img alt=&quot;Figure 3: Sample slide from our Knowledge Base presentation&quot; src=&quot;https://federal-field-notes.ca/img/articles/kb-3.png&quot; /&gt;
      &lt;figcaption&gt;
      &lt;p&gt;A sample slide from a hypothetical PowerPoint deck introducing our Knowledge Base.&lt;/p&gt;
      &lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;At this point, we are trying to get across the main idea, but since no one on the team knows Photoshop, we are doing our best with PowerPoint. Just because we don’t have a knack for building &lt;a href=&quot;https://www.invisionapp.com/defined/mockup&quot;&gt;interface mockups&lt;/a&gt;, doesn’t mean we can’t give it the old college try, eh? As anyone who’s been in government for a few years knows, there is no limit to the fun and creative formatting options available in PowerPoint. We could play it safe with dependable bullet lists and tables, or maybe we add a bit more pizazz with a little clipart car driving along a road that passes all our milestones (metaphor!).&lt;/p&gt;
&lt;p&gt;As we meet with different groups to introduce our upcoming Knowledge Base, we will get suggestions for new features, which we can add in as new boxes on our slide. Sometimes we get genuinely good recommendations, but there are a couple of other (bad) reasons why suggested new features are incorporated at this point:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some of the groups we are meeting will be the ones we need approval from later. If they suggest something, we are more likely to get our product approved if it’s included.&lt;/li&gt;
&lt;li&gt;In waterfall product development, the “planning phase”, in which all the planning happens, is followed by an “implementation phase” in which all of the implementation happens. Anything &lt;em&gt;not&lt;/em&gt; included during the planning phase is difficult to add later, so our incentive is to take the ‘kitchen sink’ approach where we squeeze in as many ideas as we can upfront because later it will be too late.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After doing the rounds internally and making requested updates, we are ready now to start implementing — whether using an internal IT team or a contracted vendor team — and given the 3 artefacts we’ve created so far, we are going to cross our fingers that it’s clear enough to be handed off at this point.&lt;/p&gt;
&lt;h2 id=&quot;whats-going-wrong-here&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#whats-going-wrong-here&quot;&gt;&lt;span&gt;What’s going wrong here?&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;At this point, let’s pause our &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#caveat-note&quot; id=&quot;caveat-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;somewhat (but not wholly!) contrived product development process&lt;/a&gt; and talk about what’s missing. The two roadblocks I described earlier were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;What is the thing?&lt;/strong&gt; We haven’t yet created a product visualization that helps someone easily grasp the product. This means it’s hard for our colleagues (or end users) to give us useful feedback.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What is important about the thing?&lt;/strong&gt; Our business case describes desired outcomes but our slide deck just contains a laundry list of desired features. Are they all equally useful? Are there any that we don’t need right away? Or that we don’t need at all?&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;1-what-is-the-thing&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#1-what-is-the-thing&quot;&gt;&lt;span&gt;1. What is the thing?&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;At each stage, we have created an abstract representation of the system that is needed for a specific milestone, but &lt;strong&gt;none of them give us a quick and easy way of visualizing what we are looking to build or explain why this is the best thing to build&lt;/strong&gt;. Each approvals group is only interested in one aspect of the product, so we are continually creating partial representations. To be clear, it’s not that we don’t need, say, an architecture diagram, but the problem is that “getting a clear, easily-understood depiction” is nobody’s responsibility. None of these documents are much help to someone just hearing about this project for the first time.&lt;/p&gt;
&lt;p&gt;Enterprise product development means lots of meetings with lots of different groups and something that would be really helpful in this environment is a clear, easily-understood depiction of the thing you’re trying to build. It’s easy to say, for example, “we are trying to build a product that answers the most common questions we get at the call centre”, but that’s still not enough to go off of if we want to have informed discussions and gather meaningful feedback. And if that’s all you have when you contract an IT team to build your product, well, it’s anyone’s guess what you’re going to end up with by the end.&lt;/p&gt;
&lt;p&gt;It’s a bit like those medieval lion sculptures you occasionally see that don’t really look a whole lot like lions.&lt;/p&gt;
&lt;details open=&quot;&quot;&gt;
    &lt;summary&gt;Figure 4: A medieval sculpture of a lion&lt;/summary&gt;
    &lt;div&gt;
      &lt;figure&gt;
      &lt;img alt=&quot;Figure 4: A medieval sculpture of a lion&quot; src=&quot;https://federal-field-notes.ca/img/articles/lion.jpg&quot; /&gt;
      &lt;figcaption&gt;
      &lt;p&gt;A medieval lion with human eyes and teeth, and a big moustache.&lt;/p&gt;
      &lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;Maybe a medieval project manager handed over a list of lion requirements (teeth, facial hair, 2 eyes) to a sculptor who had never seen one before. In the end, we get something lion-adjacent but there’s something pretty weird about its teeth and moustache. &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#lion-note&quot; id=&quot;lion-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;You can imagine it might have turned out better if you could have shown the sculptor a picture of a lion first&lt;/a&gt; instead of a 56-parchment requirements document.&lt;/p&gt;
&lt;h3 id=&quot;2-what-is-important-about-the-thing&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#2-what-is-important-about-the-thing&quot;&gt;&lt;span&gt;2. What is important about the thing?&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Perhaps more fundamentally, none of the documents we have created thus far really focus on &lt;em&gt;validating&lt;/em&gt; the problem we are trying to solve. Approvals groups have narrow slices of responsibility, which means you can end up meeting all the requirements you get from various teams &lt;em&gt;and&lt;/em&gt; releasing a product with a clunky user experience (eg, &lt;a href=&quot;https://www.usatoday.com/story/news/politics/2013/11/01/poll-kaiser-obamcare-aca-website-repairs/3350137/&quot;&gt;Healthcare.gov launched with ~8-second load times between pages&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Let’s use a hypothetical example to illustrate this: imagine we had a security requirement recommending we log people out frequently to protect their data. We don’t want someone logging in at a library and then the person after them gaining control of their account. Of course there are other aspects to consider — design, accessibility, architecture, etc — but the security team knows that that expertise lives elsewhere in the org. So the product team asks ‘how long can they be logged in?’, and the security team says ‘the shorter the time frame, the better for security.’ Someone suggests 15 mins before logging people out and the security team says ‘That works for us, you are approved.’ Now the team has a clear direction and approval to move forward — win-win. The only group to lose out is anyone using this service in the future, because getting logged out every 15 minutes would be awful.&lt;/p&gt;
&lt;p&gt;To clarify, a 15-minute logout limit is a made-up example to underline a point, not something that I’ve ever come across. But what’s true here is that by moving responsibility away from the team and into so many oversight groups, you end up with fragmented product ownership and requirements that don’t always consider the holistic experience of your eventual users.&lt;/p&gt;
&lt;p&gt;And it’s hard to blame the team here: it’s completely rational for teams with overlapping sets of requirements to pursue the path of least resistance for getting approval, even if it results in a product that is hard to understand and logs people out too often.&lt;/p&gt;
&lt;h3 id=&quot;wont-somebody-think-of-the-users&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#wont-somebody-think-of-the-users&quot;&gt;&lt;span&gt;Won’t somebody think of the users?&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;So far, I’ve focused on internal dynamics of waterfall product development because they take up so much time and energy. But let’s keep in mind what isn’t being prioritized here: &lt;strong&gt;talking to the real people who will end up using whatever it is we build&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;As a product evolves from an outline in a business case to a more definite list of requirements, all kinds of specific detail is added: whether there will be user accounts, how long before you are logged out, if it makes sense to include a chatbot, etc. Usually, these requirements are essentially just hunches, and the more of them you add up, the less chance you have they will all be right. It cannot be emphasized enough, it’s a &lt;em&gt;much better&lt;/em&gt; idea to spend a few thousand dollars and a few &lt;em&gt;weeks&lt;/em&gt; &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#chatbot-note&quot; id=&quot;chatbot-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;seeing if people like your chatbot idea&lt;/a&gt; than spending millions of dollars building the real thing over 3-5 &lt;em&gt;years&lt;/em&gt; before anyone ever even sees it.&lt;/p&gt;
&lt;p&gt;But here’s where our two problems create obstacles towards reaching out to users. First of all, we don’t have an easily-grasped prototype or mockup, which means it will be really hard to get meaningful feedback. And secondly, we don’t have a clear role on the team responsible for connecting the feedback we do get to an overall product vision.&lt;/p&gt;
&lt;h2 id=&quot;agile-to-the-rescue&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#agile-to-the-rescue&quot;&gt;&lt;span&gt;Agile to the rescue?&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Loyal readers will know that at some point I am always like ‘&lt;a href=&quot;https://youtu.be/YEuA5Y_Cc88?t=19&quot;&gt;my ally is Agile and a powerful ally it is&lt;/a&gt;. &lt;span role=&quot;img&quot; aria-hidden=&quot;true&quot;&gt;🧘&lt;/span&gt;’ And I’ll get there, don’t worry. But, given all we’ve discussed so far, just being ‘more agile’ right now isn’t likely to help.&lt;/p&gt;
&lt;p&gt;One of the key agile recommendations is changing from single-discipline teams giving approvals, to multidisciplinary teams staffed with all the skills needed to design and build products. Theoretically, this is pretty straightforward, you use your &lt;a href=&quot;https://www.youtube.com/watch?v=SF_E42RdF-4&quot;&gt;Roller Coaster Tycoon tweezers&lt;/a&gt;, grab one person from each discipline in your department, and drop them all in the same boardroom until they ship you something that looks like AirBnb. The idea is to create a new agile team from staff you already have. Unfortunately, creating an integrated team with only the roles we already have is not going to solve either of our two problems.&lt;/p&gt;
&lt;p&gt;Firstly, we don’t have an easy-to-understand mockup because it’s nobody’s job. If we smooshed everyone together at this point, you likely don’t have anyone familiar with &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#mockups-note&quot; id=&quot;mockups-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;the ideation process which leads to creating mockups or testable prototypes&lt;/a&gt;, as product design roles are not common in the federal government.&lt;/p&gt;
&lt;p&gt;Secondly, on the lack of prioritization and product thinking, there is an even bigger gap here. Collectively, formalized enterprise processes are about creating more certainty as the project progresses. What starts out as a concept in a business case becomes modelled in different ways — as a technical system, as a list of features — essentially following a linear path where we continue to add detail without really validating that new additions are needed or even useful. (&lt;a href=&quot;https://www.canada.ca/en/treasury-board-secretariat/services/information-technology-project-management/project-management/guide-project-gating.html#toc8&quot;&gt;In Canada’s Guide to Project Gating&lt;/a&gt;, “user needs” are mentioned in the first three planning phases, but not in subsequent implementation phases.)&lt;/p&gt;
&lt;p&gt;Creating a new, composite team that ‘works agile’ (ie, does sprints) doesn’t solve the problem that we are missing ways of gaining crucial insight about our product (eg, usability testing, user feedback, market research). Agile teams in departments are usually granted leeway to experiment with new approaches outside of conventional product gating, but without specifically staffing teams to prioritize gaining actionable feedback, your most likely outcome will be teams that fall back on existing linear processes out of habit, losing a critical benefit of agile workflows.&lt;/p&gt;
&lt;h2 id=&quot;recommendations&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#recommendations&quot;&gt;&lt;span&gt;Recommendations&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Don’t worry though, it’s still an article by Agile Paul and so ‘Agile Will Save You’ is right around the corner. I’m not saying agile is unworkable here, only that assembling new teams to experiment with new workflows &lt;em&gt;without adding new skills&lt;/em&gt; creates gaps which we need to address. There are 2 issues to fix here: (1) What is the thing? and (2) What’s important about the thing? and, luckily, both of these map pretty cleanly onto job titles.&lt;/p&gt;
&lt;p&gt;Specifically, we need to introduce 2 new roles:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A Designer to &lt;em&gt;get you to a place&lt;/em&gt; where you can create and test mockups.&lt;/li&gt;
&lt;li&gt;A Product Manager to prioritize &lt;em&gt;what&lt;/em&gt; we’re building and &lt;em&gt;why&lt;/em&gt;, not to just blindly lead the team to build whatever made it into our slide deck.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;1-hire-a-designer&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#1-hire-a-designer&quot;&gt;&lt;span&gt;1. Hire a Designer&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Designers are an essential part of any agile digital service team. Simplistically, a Designer is tasked with producing and iterating on mockups/wireframes — definitely a gap we have now — but this recommendation is broader than that.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The core skill set of Designers is the ability to condense abstract problems into a defined solution that balances practicality with utility&lt;/strong&gt;. I’ve focused on the mockup because it’s the most tangible artefact of our new Knowledge Base, but, more holistically, designers are responsible for &lt;em&gt;the process&lt;/em&gt; of arriving at an initial concept with the team, and continually testing/validating it over time. A Designer will investigate the problem, understand the context (what other solutions exist, what do we have now, how do people get here?), determine who the end users are, and advocate on their behalf. In the end, Designers propose solutions in the shape of wireframes, mockups, or click-through prototypes. Here’s what a mockup of our Knowledge Base might look like:&lt;/p&gt;
&lt;details open=&quot;&quot;&gt;
    &lt;summary&gt;Figure 5: Sample mockup of the Knowledge Base homepage&lt;/summary&gt;
    &lt;div&gt;
      &lt;figure&gt;
      &lt;img alt=&quot;Figure 5: Sample mockup of the Knowledge Base homepage&quot; src=&quot;https://federal-field-notes.ca/img/articles/kb-4.png&quot; /&gt;
      &lt;figcaption&gt;
      &lt;p&gt;A sample mockup of the homepage of our hypothetical Knowledge Base.&lt;/p&gt;
      &lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;So, we’re definitely headed in the right direction, but mockups are still just a ‘best guess’ about what we think is the best way forward. And like with any guess, you still might be wrong. It’s important to emphasize that a Designer’s role goes beyond just producing mockups or presentations, but includes actually validating that mockup with stakeholders and end users to increase our confidence as we move from a card castle of educated guesses to a concrete Actually Existing product.&lt;/p&gt;
&lt;p&gt;That being said, the first step towards gathering usable feedback is arriving at a design that looks like what we’re trying to build (even if it’s just &lt;a href=&quot;https://digital.gov/2014/05/22/how-to-make-a-mobile-paper-prototype/&quot;&gt;lo-fi prototyping&lt;/a&gt;). This is not possible with the other artefacts we have created thus far, but mockups are something that everyone can understand without being fluent in Unified Modelling Language.&lt;/p&gt;
&lt;h3 id=&quot;2-hire-a-product-manager&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#2-hire-a-product-manager&quot;&gt;&lt;span&gt;2. Hire a Product Manager&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Product Manager (PM) is accountable for the overall success of a product — almost like a mini CEO. Product Managers know &lt;em&gt;what&lt;/em&gt; is needed and &lt;em&gt;why&lt;/em&gt; it is needed: using evidence from user feedback, product metrics, and external research to set a product vision and a roadmap to get there. An important distinction is that &lt;strong&gt;Product Management isn’t about executing a predetermined plan, but charting a course towards building the best practical solution based on available evidence&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If we go back to &lt;a href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#3-the-slide-decks&quot;&gt;the slide deck example&lt;/a&gt;, we can see a laundry list of possible features with no explanation of how they might fit together. If we created a mockup of a product with all these features, we can at least imagine what the heck this might look like. But we are still talking about building &lt;a href=&quot;https://simpsons.fandom.com/wiki/The_Homer&quot;&gt;The Homer Car&lt;/a&gt;: cramming everything you possibly could into a bloated and confusing product.&lt;/p&gt;
&lt;p&gt;If you contract a vendor dev team to implement everything on your list and make payment contingent on that, you create a bunch of perverse incentives, and you also lose control of your scope and the quality of the outcome. There’s no real sense of what is important to users or what kind of compromises are tolerable — you’re locked in.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Your PM ultimately establishes your list of desired features and prioritizes them.&lt;/strong&gt; Without explicit product ownership, you can end up with some pretty awkward products, with superfluous features crowbarred just because they were in a document somewhere. Product managers act as a funnel, listening to all the various groups, and condensing that information into something workable. A PM’s representation of the product is a backlog of all the ongoing work:&lt;/p&gt;
&lt;details open=&quot;&quot;&gt;
    &lt;summary&gt;Figure 6: Sample backlog&lt;/summary&gt;
    &lt;div&gt;
      &lt;figure&gt;
      &lt;img alt=&quot;Figure 6: Sample backlog&quot; src=&quot;https://federal-field-notes.ca/img/articles/kb-5.png&quot; /&gt;
      &lt;figcaption&gt;
      &lt;p&gt;A sample backlog for a hypothetical in-development Knowledge Base.&lt;/p&gt;
      &lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;A good backlog is up-to-date and prioritized: all ongoing work is visible and &#39;for-later&#39; items are kept track of. On the waterfall teams I’ve been a part of, everyone is obsessed with planning but on a day-to-day level there is very little clarity on what people are working on and what state things are in. It’s common that team members are moonlighting on many different tasks at once but without any real sense of progress or priority. In contrast, a well-ordered backlog is essential for making sure the team is always pulling in the same direction, supporting each other where possible, and highlighting blockers so that they can be resolved.&lt;/p&gt;
&lt;h2 id=&quot;potential-barriers&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#potential-barriers&quot;&gt;&lt;span&gt;Potential barriers&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;So that’s it then, just hire two new staff members and away we go, eh? Well, not quite. In keeping with the everything-comes-in-twos theme, I’ll briefly outline two barriers you will likely run into.&lt;/p&gt;
&lt;h3 id=&quot;the-process-barrier&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#the-process-barrier&quot;&gt;&lt;span&gt;The process barrier&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Current gating processes emphasize an approvals-based “figure-it-all-out-before-doing-anything” workflow where teams are given a predetermined solution to execute on. There is some sense in this, given that single-discipline teams are the norm in large departments. Building any digital product is a multidisciplinary activity (requiring input from policy, design, development, security, architecture, etc), but enterprise orgs don’t typically allow for heterogenius team structures able to efficiently compile diverse input on a day-to-day basis. Instead, the ‘waterfall’ solution is to create an internal assembly line where these various groups add their particular weld or coat of paint to every product as it passes by — think of &lt;a href=&quot;https://www.youtube.com/watch?v=v2J-qS9n9X4&quot;&gt;how cars are assembled on a factory floor&lt;/a&gt;: each station on the conveyor belt is responsible for one aspect of every car. In this traditional approach, interactions between disciplines are defined upfront by an org-wide linear process.&lt;/p&gt;
&lt;p&gt;In contrast, multi-disciplinary agile teams bring these varied disciplines into close collaboration, prioritizing quick feedback and iterative changes. This fundamental change in approach requires strong facilitation skills: &lt;strong&gt;losing the structure of a waterfall process means the team is responsible for defining its own workflow&lt;/strong&gt;, something existing staff are not likely to have seen before. This is where a Designer and Product Manager are essential: Designers lead the product design by facilitating team collaboration, while Product Managers plan an overall team strategy, prioritize upcoming tasks, and delegate responsibilities.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;However&lt;/em&gt;, just as abandoning your waterfall process without hiring new roles probably won’t work, &lt;strong&gt;hiring new roles without changing your waterfall process is a similarly bad idea&lt;/strong&gt;. If you already have a signed-off requirements list for a Designer to mock up and a fixed timeline for a Product Manager to have everything done by, you are setting them up to fail. Bringing in Designers and/or Product Managers is the right idea, but they need the right conditions to succeed. Without creating space for working through unknowns, collecting feedback, and iterating as you go, you risk a scenario where you hire great people only for them to hit a wall as they run up against legacy processes fundamentally at odds with their skillset.&lt;/p&gt;
&lt;h3 id=&quot;the-hiring-barrier&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#the-hiring-barrier&quot;&gt;&lt;span&gt;The hiring barrier&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;‘But I can’t hire Designers or Product Managers in my department!’&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I’m glad you brought it up. For anyone still reading (hello, huge kudos!) one of the biggest obstacles to taking this advice is related to hiring in the Canadian government. I’m not an HR professional, so I’m not an expert on hiring in government, but to be brief, the Canadian government is a unionized workforce and when you’re hiring people in, you have to match them to &lt;a href=&quot;https://www.canada.ca/en/treasury-board-secretariat/services/collective-agreements/occupational-groups.html&quot;&gt;an already-existing job classification&lt;/a&gt;. As a Developer, I am part of &lt;a href=&quot;https://www.canada.ca/en/department-national-defence/maple-leaf/defence/2021/09/cs-to-it-group-conversion.html&quot;&gt;the ‘IT’ group&lt;/a&gt; (previously &lt;a href=&quot;https://www.tbs-sct.canada.ca/agreements-conventions/view-visualiser-eng.aspx?id=1&quot;&gt;the ‘CS’ group&lt;/a&gt;), if you are an Economist, you are part of &lt;a href=&quot;https://www.tbs-sct.canada.ca/agreements-conventions/view-visualiser-eng.aspx?id=4&quot;&gt;the ‘EC’ group&lt;/a&gt;. But there is not yet any set classification for Designers or Product Managers. What this means is that you have to do what you can. Sometimes you can pilot bringing in new roles under a generic classification, sometimes you have the go-ahead to hire contractors, or you might know colleagues keen to take on the role themselves.&lt;/p&gt;
&lt;p&gt;Again, I am not an HR or policy specialist so I understand this is a problem, but specific solutions will depend on your context. If you know other PMs or Designers in government, ask them how they got the job, or &lt;a href=&quot;https://design-gc-conception.slack.com/signup#/domain-signup&quot;&gt;join the Slack group for &lt;abbr title=&quot;Government of Canada&quot;&gt;GC&lt;/abbr&gt; Designers&lt;/a&gt; and see if anyone can give you advice.&lt;/p&gt;
&lt;p&gt;But, even though it might be hard to get some of these new roles in, you really should spend whatever political capital you have here. Every agile ‘pathfinder’ project that fails serves to discredit similar initiatives in the future (and vice-versa), so it’s important to put together the strongest team you can.&lt;/p&gt;
&lt;h2 id=&quot;modern-roles-for-modern-teams&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-07-20-hire-a-designer-and-a-product-manager/#modern-roles-for-modern-teams&quot;&gt;&lt;span&gt;Modern roles for modern teams&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;So there you go, two cut-and-dry recommendations for you: get yourself a Designer and a Product Manager. Since these two roles are not yet formalized in official federal job classifications, they are likely to be missed in most small-scale innovation projects. So it may not be easy to find them, but, then again, it might not be as hard as you think! While there aren’t too many many Designers or PMs in federal government (yet!), those that are often find themselves siloed on innovation projects that are more demonstrative than practical. If you have a shot at building an Actual Product that’s going to be released, that’s an opportunity you can offer someone who feels like they’re not getting that same chance with their current team.&lt;/p&gt;
&lt;p&gt;For the time being, ‘Innovation’ projects (or ‘pathfinder’ projects) in government will always be some compromise between a ‘pure’ agile workflow and the rules-based waterfall processes the department is comfortable with, but they are still your best bet for effecting change inside of risk-averse departments. In order to create better conditions for yourself, it helps a lot to have a success or two under your belt, and you will only get those if you take advantage of opportunities where you can find them. Whenever you find yourself on one of these teams, you’ll want to stack the deck in your favour as much as possible, and that means: &lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/&quot;&gt;Move Fast and Be Safe&lt;/a&gt; while you focus on &lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/&quot;&gt;Building One Thing That Works&lt;/a&gt; with your two new friends, your Designer and Product Manager.&lt;/p&gt;

    </content>
  </entry>
  <entry>
    <title>You don’t need a Platform, you need One Thing That Works</title>
    <link href="https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/" />
    <updated>2022-06-21T00:00:00Z</updated>
    <id>https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/</id>
    <content type="html">
        &lt;nav class=&quot;table-of-contents&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#platforms-a-definition&quot;&gt;Platforms, a definition&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#platforms-in-government&quot;&gt;Platforms in government&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#enterprise-platforms-starting-backwards&quot;&gt;Enterprise platforms: Starting backwards&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#1-platforms-for-nothing&quot;&gt;1. Platforms for nothing&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#2-the-sorry-you-have-to-wait-for-it-platform&quot;&gt;2. The sorry-you-have-to-wait-for-it Platform&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#3-diagram-driven-platforms&quot;&gt;3. Diagram-driven Platforms&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#the-bear-trap-of-pre-emptive-platform-planning&quot;&gt;The bear trap of pre-emptive platform planning&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#agile-planning&quot;&gt;Agile planning&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#starting-with-simple&quot;&gt;Starting with simple&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#one-thing-that-works&quot;&gt;One Thing That Works&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#can-it-be-so-simple&quot;&gt;Can it be so simple?&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#1-planning-for-change-with-sacrificial-architectures&quot;&gt;1. Planning for change with “sacrificial architectures”&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#2-the-rule-of-three&quot;&gt;2. The Rule of Three&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#3-smartly-scoped-vertical-services&quot;&gt;3. Smartly-scoped ‘vertical’ services&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#services-first-platforms-later&quot;&gt;Services first, platforms later&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/nav&gt;&lt;h2 id=&quot;introduction&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#introduction&quot;&gt;&lt;span&gt;Introduction&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you work in tech and you’re the kind of person who likes the word ‘strategic,’ you are probably also the kind of person who likes the word ‘platform.’ And, in theory, you are right to do so: anticipating ‘platforms’ is smart strategy. Platforms are essential in any serious technology ecosystem: they can save lots of time and enable seamless experiences — but they don’t always. The central problem with building your own platform is really one of timing. A well-designed platform introduced at the right time is a godsend, but a pre-emptive platform is often a distraction that sucks up a lot of energy and money. So let’s talk ‘platforms’: what are they, why are they useful, and why are government teams attracted to them like mosquitos to a bug zapper?&lt;/p&gt;
&lt;p&gt;And what should we do instead?&lt;/p&gt;
&lt;h2 id=&quot;platforms-a-definition&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#platforms-a-definition&quot;&gt;&lt;span&gt;Platforms, a definition&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A platform is a foundational, reusable technological building block — colloquially, “&lt;a href=&quot;https://www.forbes.com/sites/adrianbridgwater/2015/03/17/whats-the-difference-between-a-software-product-and-a-platform/?sh=c4e0c6356a60&quot;&gt;anything you can build upon&lt;/a&gt;.” Think of a platform as &lt;a href=&quot;https://www.google.com/search?q=lego+baseplate&amp;amp;tbm=isch&amp;amp;ved=2ahUKEwjG2sDt_bH4AhWXqHIEHZn9A7AQ2-cCegQIABAA&amp;amp;oq=lego+baseplate&quot;&gt;a base “Lego” mat&lt;/a&gt; that you put your other pieces on top of.&lt;/p&gt;
&lt;p&gt;A good &lt;em&gt;platform&lt;/em&gt; solves a problem really well for many different &lt;em&gt;products&lt;/em&gt;. An example of this is your &lt;a href=&quot;https://www.google.com/account/about/&quot;&gt;Google Account&lt;/a&gt;, which signs you into Gmail, Google Calendar, and Youtube (and other apps that use “&lt;a href=&quot;https://support.google.com/accounts/answer/112802&quot;&gt;Sign in with Google&lt;/a&gt;”). There are lots of things you need to ‘Sign in’ to do, and it would be silly to have all teams everywhere build their own account management system. Better to solve it in one place in a way that everyone can use (otherwise you may end up with &lt;a href=&quot;https://sboots.ca/2022/04/21/small-hopes-for-the-future-of-digital-id-in-canada/&quot;&gt;almost 60 separate login systems&lt;/a&gt;). Done properly, you save each team from re-building the same stuff and create seamless experiences: eg, once you log into Gmail, you can see your GCal events.&lt;/p&gt;
&lt;p&gt;Ultimately, this is what we want: platforms that enable a scalable and integrated product ecosystem by saving teams time and reducing duplication of effort across an organization — particularly for big organizations with a large portfolio of services. (&lt;em&gt;Hmm, I wonder where we can find one of those?&lt;/em&gt;)&lt;/p&gt;
&lt;h2 id=&quot;platforms-in-government&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#platforms-in-government&quot;&gt;&lt;span&gt;Platforms in government&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As a devoted reader of this newsletter, you will likely have anticipated that ‘the government’ is exactly the kind of organization that can benefit from the economies of scale you get with platform products. And, indeed, the government already operates lots of platforms: inside most departments you will often find platform-y type systems for getting or retrieving data, managing user accounts, calculating things — take your pick. At a macro level, many government services can be described in broadly similar terms. If we think about passports, driving licenses, or voting in an election, we can reuse the same sequence of events.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Learn about the service
&lt;ul&gt;
&lt;li&gt;Do I qualify?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(Optional:) Verify your identity / sign in&lt;/li&gt;
&lt;li&gt;Fill in information
&lt;ul&gt;
&lt;li&gt;(Optional:) Provide documentation&lt;/li&gt;
&lt;li&gt;(Optional:) Make a payment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Submit application&lt;/li&gt;
&lt;li&gt;Wait for confirmation&lt;/li&gt;
&lt;li&gt;Receive benefit or service&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each of these steps could be “platformized” (to coin a phrase): maybe “&lt;a href=&quot;https://forms-formulaires.alpha.canada.ca/en/id/1&quot;&gt;submit information&lt;/a&gt;” is a platform, maybe “&lt;a href=&quot;https://www.payments.service.gov.uk/&quot;&gt;make a payment&lt;/a&gt;” is a platform, maybe “&lt;a href=&quot;https://notification.canada.ca/&quot;&gt;sending confirmation emails&lt;/a&gt;” is a platform, maybe — oh yeah — &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#id-note&quot; id=&quot;id-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;“signing in” could be a platform&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But let’s not get ahead of ourselves. While platforms have &lt;em&gt;the potential&lt;/em&gt; to enable scalable product delivery, they can just as easily become — perhaps one of the most fun words in the English language — a &lt;a href=&quot;https://dictionary.cambridge.org/dictionary/english/boondoggle&quot;&gt;boondoggle&lt;/a&gt;. The Canadian government is littered with plans for premature ‘platforms’ that suck time and energy from more useful deliverables for years at a time.&lt;/p&gt;
&lt;h3 id=&quot;enterprise-platforms-starting-backwards&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#enterprise-platforms-starting-backwards&quot;&gt;&lt;span&gt;Enterprise platforms: Starting backwards&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Large departments like to take (&lt;a href=&quot;https://www.youtube.com/watch?v=-Ifnaxi2LQg&quot;&gt;you already know&lt;/a&gt;) an “enterprise” approach to problem-solving, leading to a novel situation where internal groups absolutely love proposing platforms at the point when they are least needed and most likely to go wrong.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/&quot;&gt;In a previous post&lt;/a&gt;, I described how “enterprise” organizations make ‘consistency’ their ultimate goal. To pull a quote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Broadly understood, we could sum up the ‘enterprise’ mindset as: “if we have the same problem in different places, we should solve it the same way.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this conception, technology platforms are a total slam dunk:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;They rationalize work-to-be-done (one team solves the same problem for all others instead of duplicating effort)&lt;/li&gt;
&lt;li&gt;By solving a problem in one central place, it means everyone gets a consistent experience&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If my job was to come up with really sophisticated plans that sound awesome, you better believe I’m plonking a platform or two into my system architecture diagram.&lt;/p&gt;
&lt;p&gt;But even though this looks good on paper — loyal reader, brace yourself — this is actually pretty backwards in practice. The basic problem with the ‘enterprise’ infatuation with platforms is not being able to imagine a cart without putting it before a horse.&lt;/p&gt;
&lt;p&gt;Let’s look at some of the ways that planning for platforms leads to outcomes that are the opposite of what we want.&lt;/p&gt;
&lt;h4 id=&quot;1-platforms-for-nothing&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#1-platforms-for-nothing&quot;&gt;&lt;span&gt;1. Platforms for nothing&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Good platforms are derived from real-world use. Bad platforms anticipate how the world &lt;em&gt;should&lt;/em&gt; work. And as anyone with strong political opinions can tell you, the world definitely &lt;em&gt;should&lt;/em&gt; work differently to how it actually does. It turns out that people are complicated, and so are the systems we build.&lt;/p&gt;
&lt;p&gt;In a lot of enterprise planning, the basic idea is this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Initial plan: let’s build an app, a website, and a chatbot that display a list of benefits.&lt;/li&gt;
&lt;li&gt;Therefore, we need to be able to retrieve the same data in 3 different places at once.&lt;/li&gt;
&lt;li&gt;Therefore, it would make sense to build a data retrieval platform (let’s call it the “Y2K Application Generic Networked Interface”). This is awesome because we won’t have to rebuild similar functionality in different places, and it will make our downstream products simpler.&lt;/li&gt;
&lt;li&gt;Therefore, &lt;em&gt;first&lt;/em&gt; we should build the Y2K Application Generic Networked Interface (YAGNI), and &lt;em&gt;later&lt;/em&gt; build our app, website, and chatbot, because they all rely on the YAGNI.&lt;/li&gt;
&lt;li&gt;Therefore, let’s book a series of meetings where we spec out the YAGNI by inviting 80 people to review a PowerPoint deck where there are 100 words on every slide.
&lt;ul&gt;
&lt;li&gt;Also let’s make sure to always call it the ‘YAGNI’ from now on, and never explain it to new people.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This might sound good in theory, but what has happened here is that &lt;strong&gt;you have committed yourself to a really expensive and complex deliverable that, by itself, doesn’t provide any value to users&lt;/strong&gt;. Building platforms to solve some future requirement for a suite of products you haven’t built yet is actually &lt;em&gt;the opposite&lt;/em&gt; of what you should do. There are just too many unknowns, and you can’t answer them by making really elaborate slideshows.&lt;/p&gt;
&lt;p&gt;Here are a couple good indicators of when to avoid building a platform:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When you have 1 product that can use it&lt;/li&gt;
&lt;li&gt;When you have 0 products that can use it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are building a platform that doesn’t hook into any currently live product, you are doing it backwards.&lt;/p&gt;
&lt;h4 id=&quot;2-the-sorry-you-have-to-wait-for-it-platform&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#2-the-sorry-you-have-to-wait-for-it-platform&quot;&gt;&lt;span&gt;2. The sorry-you-have-to-wait-for-it Platform&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Good platforms make life easier for teams building services that make life easier for users. Bad platforms block teams from making needed improvements — this is how &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#perf-note&quot; id=&quot;perf-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;‘the perfect’ becomes the enemy of ‘the good.’&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let’s reuse the last example. We have 3 products planned (an app, a website, and a chatbot), and they all need the same data in the same format (we think). It seems logical to say we don’t want each team to build its own logic for getting data, because it means 3 different ways of getting the same data (we think). That means &lt;strong&gt;duplication of effort&lt;/strong&gt; and &lt;strong&gt;inconsistency&lt;/strong&gt; — it’s really not an enterprise approach.&lt;/p&gt;
&lt;p&gt;Instead, let’s pause on building the app, website, and chatbot, and instead assemble a ‘strategic’ team to plan out and build our Y2K Application Generic Networked Interface: once we have &lt;em&gt;that&lt;/em&gt;, it will be our data &lt;em&gt;platform&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Typically the platform deliverable is the most complex, which means it is the most expensive &lt;em&gt;and&lt;/em&gt; most likely to be delayed. And once it’s delayed, your app, website, and chatbot are &lt;em&gt;also&lt;/em&gt; delayed. Oops.&lt;/p&gt;
&lt;p&gt;There are definitely variations to this scenario but the essential feature is creating an internal blockage where a bunch of new products (or new approaches) are logjammed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nobody can build their own testing pipeline until the “automated testing strategy” is ready.&lt;/li&gt;
&lt;li&gt;Nobody can release a cloud service until the “cloud platform team” has built and assessed their “cloud platform”.&lt;/li&gt;
&lt;li&gt;Nobody can build their own public-facing API until the “API Gateway” is up and running.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A handful of teams each building something that works is going to get you lots of useful insights (what data is shared, what data is unique, where is the greatest load in the system, etc). But instead, departments often create siloed “platform teams” trying to design a perfect solution without a real-world deliverable. And meanwhile other teams waiting around are told either to (a) wait until the platform is ready (it’s already been delayed twice), or, if you can’t wait, then (b) build another product with the 20-year-old technology we are trying to move away from. Here again, ‘enterprise thinking’ is a backwards approach, leading to ‘platforms’ that block teams instead of enabling them.&lt;/p&gt;
&lt;h4 id=&quot;3-diagram-driven-platforms&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#3-diagram-driven-platforms&quot;&gt;&lt;span&gt;3. Diagram-driven Platforms&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In an enterprise department, consistency-bias typically results in a drive to standardize everything, so that, over time, only a handful of (quickly outdated) technologies are permitted. &lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#long-term-oversight-as-bureaucratic-cement&quot;&gt;I summed this up in a previous article&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Without an easy way for teams to try out new technologies, new software, and new designs, you wind up stifling your long-term ability to incrementally modernize.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once your costs of experimentation become prohibitive, your organization becomes unable to iteratively introduce new tech, usually restricting experimentation to small ‘innovation groups’ whose projects are rarely released.&lt;/p&gt;
&lt;p&gt;When new technologies &lt;em&gt;are&lt;/em&gt; being introduced however, it is often in the context of an elaborate ‘strategic’ plan with lots of specific detail about exactly how the implementation will go, what will connect to what, and on what timeline everything will be done. So, at the point where you have the &lt;em&gt;least&lt;/em&gt; understanding of the technology in question — often before having used it in production — you can wind up with strategic IT groups planning hugely expensive and complex cloud-based platforms. What you get from these teams is a lot (&lt;strong&gt;a lot&lt;/strong&gt;) of &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#consultants-note&quot; id=&quot;consultants-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;diagrams, requirements documents, and PowerPoints&lt;/a&gt;, which, problematically, &lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#the-docs-blocker&quot;&gt;mask the level of organizational uncertainty&lt;/a&gt;, creating more risk down the road.&lt;/p&gt;
&lt;p&gt;Paradoxically, while it’s hard for small teams to use new technologies for small experiments, large ‘enterprise-scale’ platform rollouts are justified as long-term investments whose economies of scale are worth the upfront costs. And, sure, it &lt;em&gt;might&lt;/em&gt; work out that way, but there’s still a huge downside risk of making the wrong bet. It seems like you would want to try a few things out first before pushing all your chips into the centre of the table. It’s kind of like saying that you aren’t allowed to see how a specific colour of paint will look on the wall unless you commit in advance to painting your entire house with it.&lt;/p&gt;
&lt;p&gt;Once again, it’s the reverse of what you would want. Nothing can be built without there first being a plan, so you end up having to create a plan to build something even before you really understand the thing you’re building.&lt;/p&gt;
&lt;h2 id=&quot;the-bear-trap-of-pre-emptive-platform-planning&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#the-bear-trap-of-pre-emptive-platform-planning&quot;&gt;&lt;span&gt;The bear trap of pre-emptive platform planning&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Well-executed platforms can save you a lot of time and money. In the best case, you solve a problem in one place instead of re-doing it 10 different times. However, this reasoning can be inverted. You can end up creating a problem in one place that gets exported to 10 other products.&lt;/p&gt;
&lt;p&gt;Whenever you make a change to a platform, the knock-on effects are much larger than they are for an individual service. This means that you probably want a lot of domain knowledge before you commit to building a big, honkin’ platform that will undergird your hundreds of millions of dollars digital transformation. And one way to get that domain knowledge is — say it with me — &lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#moving-fast-why-releasing-early-and-often-is-important&quot;&gt;agile product development&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Enterprise planning wants to start at the end (literally, you start by planning your “end state”): by conceptualizing what a fully realized, perfectly-executed platform strategy will look like, and then pouring money and energy into describing that vision in painstaking detail. Agile planning starts today: what do we have now, what are our priorities over the next 6 months, and what should we put in our roadmap for the next few years? Which bridges can we cross when we get to them?&lt;/p&gt;
&lt;p&gt;One of the mistaken assumptions about moving from waterfall to agile is that it essentially means throwing all planning out the window. The idea here is that agile teams want to replace all the really valuable biweekly syncs and &lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#internal-words&quot;&gt;39 thousand words of documentation&lt;/a&gt; with a Slackbot that (re-)deploys an undocumented web app onto a random &lt;abbr title=&quot;Platform as a Service&quot;&gt;PaaS&lt;/abbr&gt; any time someone types “&lt;abbr title=&quot;You only live once&quot;&gt;YOLO&lt;/abbr&gt;” in the team chat. Maybe this makes for a good demo or even a couple of small products, but beyond that we’re looking at anarchy: teams building things without a holistic vision or a sense of how Product A impacts Product C — it’s bad strategy. In this conception, when you have to choose between too much planning (enterprise) and no planning at all (agile), you are better off with the former.&lt;/p&gt;
&lt;p&gt;But agile product development isn’t about not planning, it’s about ‘just enough’ planning.&lt;/p&gt;
&lt;h2 id=&quot;agile-planning&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#agile-planning&quot;&gt;&lt;span&gt;Agile planning&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Agile is a fundamentally iterative approach that leaves space for new information; that doesn’t mean there’s no planning involved, but it does mean plans that are less detailed and open to adjustment.&lt;/p&gt;
&lt;p&gt;Let’s use the example of planning for a vacation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you are doing agile vacation planning, you might look up the ‘top ten’ attractions ahead of time, put together a general outline of activities and cool areas to visit for the first few days, and maybe leave a day or two available for excursions you will book once you’re there. You end up with a general outline and you have a pretty good idea how you’re going to start, but you leave some slack in the rope.&lt;/li&gt;
&lt;li&gt;If you are planning an enterprise vacation, you need to figure out everywhere you will visit, all the routes you will take between every activity, and all the restaurants you are planning to eat at — and get it all down 2 years beforehand. And don’t forget you need to finalize every order at every restaurant you’re visiting, you can’t just walk in and see how you feel.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s a useful metaphor because some decisions you can really only make once you arrive. Sometimes a restaurant that gets good reviews is closed when you turn up or a street you planned to walk down is blocked off for repaving (ie, ‘replatforming’ 😉).&lt;/p&gt;
&lt;p&gt;Agile is about putting together plans that focus on immediate priorities and orient future decisions, whereas enterprise planning is about creating hyper-realistic fan-fiction about a world where we don’t already know that &lt;a href=&quot;https://large-government-of-canada-it-projects.github.io/#are-large-it-projects-likely-to-be-successful&quot;&gt;84% of these projects are delayed or fail outright&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;starting-with-simple&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#starting-with-simple&quot;&gt;&lt;span&gt;Starting with simple&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There’s nothing wrong with planning for the future; planning is essential for any project to succeed. What &lt;em&gt;is wrong&lt;/em&gt; is a plan-everything culture of &lt;a href=&quot;https://wiki.c2.com/?PrematureOptimization&quot;&gt;premature optimization&lt;/a&gt; and overdetermination.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://en.wikipedia.org/wiki/Systemantics&quot;&gt;&lt;em&gt;Systemantics&lt;/em&gt;&lt;/a&gt;, John Gall makes the following observation about complex systems:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“A complex system that works is invariably found to have evolved from a simple system that worked. A complex system designed from scratch never works and cannot be patched up to make it work. You have to start over with a simple working system.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So let’s reframe our thinking: instead of the 10-years away “end state” where we will have a perfect, rationalized tech ecosystem, what does it look like to think in terms of a simple working system? How do we get to where we need to be by focusing on One Thing That Works?&lt;/p&gt;
&lt;h3 id=&quot;one-thing-that-works&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#one-thing-that-works&quot;&gt;&lt;span&gt;One Thing That Works&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I described earlier how planning for pre-emptive platforms often leads to unmanageable deliverables where ‘simple’ goes out the window as fast as your budget projections. But the thing is, most of the government services I’ve worked on are about logging in and filling in a form, and building these kinds of applications in 2022 is kind of a solved problem.&lt;/p&gt;
&lt;p&gt;90% of the time, you can pick your favourite popular &lt;abbr title=&quot;Model-View-Controller&quot;&gt;MVC&lt;/abbr&gt; web framework — Java has &lt;a href=&quot;https://spring.io/projects/spring-boot&quot;&gt;Spring Boot&lt;/a&gt;, Python has &lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt;, Javascript has &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt;, C# has &lt;a href=&quot;https://dotnet.microsoft.com/en-us/&quot;&gt;.NET&lt;/a&gt;, etc — and get it running with a &lt;a href=&quot;https://azure.microsoft.com/en-us/services/postgresql/&quot;&gt;Postgres&lt;/a&gt; database. MVC apps are easy to learn and support, and relational databases are the definition of not-risky. If you can get your product running as &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#buildpack-note&quot; id=&quot;buildpack-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;a couple of containers&lt;/a&gt; (app + database), you can release it on any cloud vendor and set up autoscaling rules to make sure it can handle spikes in traffic. Any cloud vendor’s bread and butter is hosting and scaling exactly this kind of product — an MVC app (with an optional API) and a managed database — for &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#costs-note&quot; id=&quot;costs-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;a monthly cost of between $15 dollars to a few hundred&lt;/a&gt; if you really push it.&lt;/p&gt;
&lt;p&gt;I’ve built several successful gov products on agile teams, you could call them “platforms” &lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#platforms-a-definition&quot;&gt;by my definition&lt;/a&gt;. They started simply and evolved as they needed to, eventually &lt;em&gt;becoming platforms&lt;/em&gt; rather than starting that way. By the time you finally &lt;em&gt;do&lt;/em&gt; need a platform (“hey, &lt;a href=&quot;https://blog.codinghorror.com/rule-of-three/&quot;&gt;we have 3 (released) apps that use the same data&lt;/a&gt;, maybe it’s time to spec out a common way of delivering that data”), you will have a bunch of really good context because you have several systems you can pull operational data from.&lt;/p&gt;
&lt;p&gt;This is what the essence of agile development is all about. &lt;strong&gt;Pick a well-scoped problem, build it with &lt;a href=&quot;https://mcfunley.com/choose-boring-technology&quot;&gt;boring, well-documented technology&lt;/a&gt;, and solve a problem for real users&lt;/strong&gt;. Instead of diving head-first into a big abstract platform, it’s much easier to reason about a concrete use-case: building out a small end-to-end slice of a larger service and using that as a building block. You can then expand that service by making your app more complex and able to handle more traffic, or by decomposing it into separate services if you want. Aim to evolve your services as you go and create platforms where they are most needed, not because you have a diagram that says so.&lt;/p&gt;
&lt;h2 id=&quot;can-it-be-so-simple&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#can-it-be-so-simple&quot;&gt;&lt;span&gt;Can it be so simple?&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;So that’s it? Build everything as simply as possible and don’t overthink about the wider implications? Just hope it will work out later? Despite the well-written-ness of this article and the charming personality of its author, you might still find my recommendation a bit simplistic.&lt;/p&gt;
&lt;p&gt;This is just an article, not an enterprise IT project, so it needs to end sometime. But there are valid concerns worth addressing about my advice, and &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#tweet-note&quot; id=&quot;tweet-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;I’ll expand on three of them here&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Why would I build something that I already know will need to change later? Isn’t this wasted effort?&lt;/li&gt;
&lt;li&gt;Just build &lt;em&gt;everything&lt;/em&gt; as simply as possible? Always? When do I generalize then?&lt;/li&gt;
&lt;li&gt;Maybe where you’re from, but there’s &lt;em&gt;no way&lt;/em&gt; I can get away with building a separate cloud database in my department.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;1-planning-for-change-with-sacrificial-architectures&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#1-planning-for-change-with-sacrificial-architectures&quot;&gt;&lt;span&gt;1. Planning for change with “sacrificial architectures”&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Change is part of life. No plan ever survives unaltered, it doesn’t matter which methodology you use. Having said that, the thing you want to avoid is starting out by committing to a fundamentally untestable multi-year ‘Death Star’-type platform and just praying that it will arrive at the right time and do just what you need it to.&lt;/p&gt;
&lt;p&gt;An alternate approach here is to start with a “&lt;a href=&quot;https://martinfowler.com/bliki/SacrificialArchitecture.html&quot;&gt;sacrificial architecture&lt;/a&gt;:” a deliberately naive architecture that gets something working in the short term and moves you towards your desired end-state. It’s similar to creating a prototype: you build an early version of something that you can test out and later retire or rebuild once you have validated the approach.&lt;/p&gt;
&lt;p&gt;I get it, maybe it sounds silly to build something that you will later rebuild. But it’s also silly to spend a lot of time building something you don’t really need. And it’s especially silly to try and create an extremely detailed plan at the point when you have the least information.&lt;/p&gt;
&lt;p&gt;I know ‘enterprise culture’ is planning-centric (often requiring a plan before any action can be taken), but “sacrificial prototypes” are a cheap way to solve a problem cheaply and gain real feedback to inform your long-term plans. Not only is it okay to acknowledge upfront that your plans will change, it’s also realistic. Way more realistic than a bunch of PowerPoints where all the dates are wrong.&lt;/p&gt;
&lt;h3 id=&quot;2-the-rule-of-three&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#2-the-rule-of-three&quot;&gt;&lt;span&gt;2. The Rule of Three&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The central recommendation of this article is to strongly prefer building simple products, but this only gets you so far. Maybe it makes sense to build a couple of services with simple assumptions, but at some point, we are going to need to step back and start refactoring for general functionality. After all, nobody wants &lt;a href=&quot;https://www.canada.ca/en/government/sign-in-online-account.html#contact-table&quot;&gt;58 different user accounts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The best general advice I’ve seen is to follow “&lt;a href=&quot;https://blog.codinghorror.com/rule-of-three/&quot;&gt;The Rule of Three&lt;/a&gt;.” It’s a lot of work to build a general solution instead of a purpose-built solution, so hold off initially. Build the straightforward thing the first time, and then do it again. By the third time, you have a good justification to extract common functionality and also plenty of experience with the problem by then.&lt;/p&gt;
&lt;h3 id=&quot;3-smartly-scoped-vertical-services&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#3-smartly-scoped-vertical-services&quot;&gt;&lt;span&gt;3. Smartly-scoped ‘vertical’ services&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Am I really suggesting putting &lt;em&gt;citizen data&lt;/em&gt; into a &lt;em&gt;new database&lt;/em&gt; in the &lt;em&gt;cloud&lt;/em&gt;? Has that been assessed? How do we even &lt;em&gt;begin&lt;/em&gt; to secure that? What about the SA&amp;amp;A document? It’s going to be a massive undertaking!!&lt;/p&gt;
&lt;p&gt;Sure, you’re always going to run into obstacles — either inherent to the problem space or department-imposed — but an important agile principle is to pick vertical slices not horizontal ones, which comes down to smartly scoping your product(s).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A “vertical” slice means designing a product that provides an end-to-end experience.&lt;/li&gt;
&lt;li&gt;A “horizontal” slice is just focusing on building one layer, but not a full service.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Platforms are ‘horizontal:’ an identity platform solves “signing in”, but “signing in” on its own is not a service. What am I signing in &lt;em&gt;to do&lt;/em&gt;? Agile product development should be ‘vertical’: we want users to visit, find/do something useful, and then leave when they are finished. It means getting a whole thing to work, even if it’s a small thing.&lt;/p&gt;
&lt;p&gt;So, yes, maybe it’s premature and unworkable to store citizen data in a cloud database at this point (is it Protected B??) – that makes sense, we all have to work within constraints. But what value can you provide &lt;em&gt;without&lt;/em&gt; asking people to create accounts? Maybe it’s enough to learn about programs that apply to them so they can start putting together the documents they need. Remember, &lt;a href=&quot;https://sboots.ca/2020/01/10/shipping/&quot;&gt;your goal is shipping&lt;/a&gt;, so don’t bite off more than you can chew. There is always a way to scope products that solve a whole problem for an end user, while minimizing problems for yourself.&lt;/p&gt;
&lt;h2 id=&quot;services-first-platforms-later&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#services-first-platforms-later&quot;&gt;&lt;span&gt;Services first, platforms later&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Technology platforms are the foundational building blocks of any well-integrated digital ecosystem, and we should all aspire to them. However, in the context of government IT planning, a ‘platform’ usually means a huge, expensive, abstract deliverable that will theoretically solve lots of problems when it is ready but in the meantime you still have all those problems because it is delayed.&lt;/p&gt;
&lt;p&gt;It’s true that well-executed platforms shorten the time and effort needed to build useful products. But in order to get platforms that look like that, we need to &lt;em&gt;start&lt;/em&gt; with those useful products, make sure they work really, really well, and then &lt;em&gt;derive&lt;/em&gt; platforms from your Actually Existing Services. And it’s good news here too, because building a useful product and testing it early is way easier than building a mega-expensive platform for a bunch of fake services we don’t have yet.&lt;/p&gt;
&lt;p&gt;Look, I am all for a good tech platform. I’ve planned them, connected to them, and even built &lt;a href=&quot;https://pcraig3.ca/work-govuk-performance-platform&quot;&gt;a&lt;/a&gt; &lt;a href=&quot;https://pcraig3.ca/work-govuk-digital-marketplace&quot;&gt;couple&lt;/a&gt;. But supporting a platform is no joke: once a bunch of products are relying on you, you can never turn one off. So you should &lt;em&gt;really&lt;/em&gt; try to avoid introducing a platform until you truly, absolutely need it. And until then, all you need is &lt;a href=&quot;https://federal-field-notes.ca/articles/2021-06-21-you-dont-need-a-platform-you-need-one-thing-that-works/#one-thing-that-works&quot;&gt;One Thing That Works&lt;/a&gt;.&lt;/p&gt;

    </content>
  </entry>
  <entry>
    <title>Move fast, stay safe</title>
    <link href="https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/" />
    <updated>2022-03-22T00:00:00Z</updated>
    <id>https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/</id>
    <content type="html">
        &lt;nav class=&quot;table-of-contents&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#mixing-oil-and-water-planning-for-spontaneity&quot;&gt;Mixing oil and water: planning for spontaneity&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#working-with-wagile&quot;&gt;Working with Wagile&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#the-docs-blocker&quot;&gt;The docs blocker&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#moving-fast-why-releasing-early-and-often-is-important&quot;&gt;Moving fast: why releasing early and often is important&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#being-safe-why-we-dont-want-to-break-things&quot;&gt;Being safe: why we don’t want to ‘break things’&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#empowered-teams-vs-oversight-committees&quot;&gt;Empowered teams vs. oversight committees&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#being-safe-in-agile&quot;&gt;‘Being safe’ in agile&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#2-agile-reduces-the-cost-of-mistakes&quot;&gt;2. Agile reduces the cost of mistakes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#3-agile-reduces-the-likelihood-of-mistakes&quot;&gt;3. Agile reduces the likelihood of mistakes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#4-agile-is-flexible&quot;&gt;4. Agile is flexible&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#moving-faster-or-being-safer&quot;&gt;Moving faster or being safer?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#a-practical-example-launching-a-website-in-a-federal-department&quot;&gt;A practical example: launching a website in a federal department&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/nav&gt;&lt;h2 id=&quot;introduction&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#introduction&quot;&gt;&lt;span&gt;Introduction&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Finally, it’s all coming together. The kids are back in school, the province is re-opening, the snow is melting, and, best of all, you’re part of an agile innovation team trialling a new way of working at a Canadian federal department. Maybe you’re a “ninja team” (there’s still a couple years until you figure out why you shouldn’t call it that), or a tiger team (still okay), or maybe you just call yourselves a product team. You have the support of your &lt;abbr title=&quot;Director General&quot;&gt;DG&lt;/abbr&gt;, a handful of enthusiastic recruits, and maybe even &lt;a href=&quot;https://digital.canada.ca/2018/06/27/tools-to-do-good-work/&quot;&gt;a few off-network devices to start prototyping with&lt;/a&gt;. As long as you have at least one developer with a &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; account and someone who knows how Figma works (&lt;a href=&quot;https://www.figma.com/pricing/&quot;&gt;starter plan!!&lt;/a&gt;), you’re basically &lt;a href=&quot;https://www.youtube.com/watch?v=UHZuLMFfriQ&quot;&gt;the best of the best of the best&lt;/a&gt;. There’s just one problem: you’re going to find that ‘doing the work’ is actually only half of the work — the other half turns out to be ‘getting it approved.’&lt;/p&gt;
&lt;p&gt;Once your team really gets going, you’ll be producing plenty of public artefacts — journey maps, priority matrices, wireframes, open-source prototypes (with appropriate ‘this is a prototype’ labelling) — and &lt;a href=&quot;https://sboots.ca/2020/10/30/working-in-the-open-firsts-for-covid-alert/&quot;&gt;communicating openly as you go&lt;/a&gt;: either through blog posts or more casually on Twitter (preferably both!).&lt;/p&gt;
&lt;p&gt;In many ways, this is the worst nightmare of a plan-first, quadruple-check-everything, launch-when-it’s-perfect enterprise department: a team releasing unvetted material to the public without going through official oversight channels, on a two-week sprint cadence that none of the committees can realistically accommodate.&lt;/p&gt;
&lt;p&gt;At some point, someone will ask you what happens if you publish something you shouldn’t. Suppose it leads to a big media exposé, maybe even a lawsuit. You will say that that’s incredibly unlikely (and you’ll be right), but, the thing is, you’ll be talking to groups looking for the worst possible outcome. It’s like trying to convince someone that crossing the street is relatively safe and people do it all the time, only to have them keep bringing up the time a minivan hit a teenager 10 years ago.&lt;/p&gt;
&lt;p&gt;This kind of argument quickly becomes deadlocked because it’s a disagreement about core principles, not tactics. Ultimately, this misalignment stems from two different approaches to managing risk. Agile workflows acknowledge that all projects include some element of risk — there are always things we don’t know — and incorporate user testing and team retrospectives to fill in the gaps. In contrast, enterprise organizations are almost pathologically unable to accept risk and stuff those gaps with paperwork. Enterprise orgs find it very hard to tolerate any level of uncertainty, which is what agile workflows explicitly introduce.&lt;/p&gt;
&lt;h2 id=&quot;mixing-oil-and-water-planning-for-spontaneity&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#mixing-oil-and-water-planning-for-spontaneity&quot;&gt;&lt;span&gt;Mixing oil and water: planning for spontaneity&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Enterprise planning (known as “&lt;a href=&quot;https://en.wikipedia.org/wiki/Waterfall_model&quot;&gt;waterfall planning&lt;/a&gt;”) tries to manage large projects by creating 4-year plans that are out of date after 4 months. How does an agile team handle planning 4 years in advance? Well, typically they don’t.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#four-years-note&quot; id=&quot;four-years-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;It’s almost impossible to guess where you will be in 4 years&lt;/a&gt;, but it’s easy to predict where you will be in a month or two. Agile planning prioritizes more immediate goals — eg, planning out your work in 2-week &lt;a href=&quot;https://www.atlassian.com/agile/scrum/sprints&quot;&gt;sprints&lt;/a&gt; — and uses ‘impressionistic’ &lt;a href=&quot;https://www.atlassian.com/agile/product-management/roadmaps&quot;&gt;roadmaps&lt;/a&gt; for longer-term projections. While the enterprise instinct is always to paper over uncertainty, agile processes embrace it: changing requirements are a part of product development and agile teams are comfortable with that.&lt;/p&gt;
&lt;p&gt;In practice, however, trading inaccurate plans for what appears to be ‘no plan at all’ doesn’t exactly look like an improvement from the perspective of a department that relies entirely on .PDF diagrams and .DOCX files to ship software. Everyone knows that &lt;abbr title=&quot;Information technology&quot;&gt;IT&lt;/abbr&gt; projects take too long and there is too much paperwork involved, but let’s not throw the bathwater out with the rest of the bathwater.&lt;/p&gt;
&lt;p&gt;To try and square this circle, enterprise orgs often come up with ‘hybrid’ models: incorporating some ‘agile’ flexibility into their traditional rigid planning processes (known as “Wagile”, from “waterfall” + “agile”). On a previous team I worked on, the enterprise security process meant completing 8 or so documents in a defined sequence: first 1, then 2, then 3, etc. Under the new “(w)agile security” process, we were instead asked to write them all simultaneously.&lt;/p&gt;
&lt;p&gt;As an agile team, you should be iterating as you learn and reducing administrative overhead to focus on actually building a product. That’s all good, as long as you make sure to iterate towards a clearly-documented end-state, and fill out all the same paperwork in less time.&lt;/p&gt;
&lt;h2 id=&quot;working-with-wagile&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#working-with-wagile&quot;&gt;&lt;span&gt;Working with Wagile&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Is ‘Wagile’ a good idea? &lt;a href=&quot;https://www.pluralsight.com/blog/it-ops/move-away-from-wagile&quot;&gt;No&lt;/a&gt;. But how about starting fights with a bunch of people you work with and eventually having your project cancelled? Well, obviously that’s worse.&lt;/p&gt;
&lt;p&gt;Even with your really smart critique of the status quo, you’re never going to be the only game in town. Every consultant and internal strategy group jockeying for funding will have a plan promising better outcomes for less money. As a ‘digital innovation’ team in an enterprise org, you are competing against a number of possible futures. The advantage that you have is that agile Actually Works™ — but this is a starting point, not a guarantee.&lt;/p&gt;
&lt;p&gt;Agile teams are the real deal. Some of today’s largest companies got to where they are because agile workflows are really good at quickly delivering value, beating out more established companies with slower delivery models. Under ideal conditions — supportive management, experienced team members, a well-understood problem — you should be able to fly through this stuff. But even if not, you still have a significant leg up on teams that spend 30% of their time in meetings trying to figure out if all the right people were invited. The point is to play to your strengths as much as possible, but you won’t have an entirely free hand.&lt;/p&gt;
&lt;p&gt;Demonstrating ‘what good looks like’ will buy you credibility in the long term, making things easier for your team and similar teams in the future. But in the short term, the only game in town is the poorly-designed Hasbro classic: “&lt;a href=&quot;https://en.wikipedia.org/wiki/Risk_(game)&quot;&gt;Risk&lt;/a&gt;”.&lt;/p&gt;
&lt;h3 id=&quot;the-docs-blocker&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#the-docs-blocker&quot;&gt;&lt;span&gt;The docs blocker&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://zenexmachina.com/waterfall-vs-agile-a-knowledge-problem-not-a-requirements-problem/&quot;&gt;Despite an estimated ~14% success rate&lt;/a&gt;, enterprise processes are viewed as ‘safe’ because the many documents produced in planning phases give the &lt;em&gt;impression&lt;/em&gt; of reducing risk. Any uncertainty requires an elaborate cover-up — large “modernization” IT projects are breeding grounds for PowerPoint decks crammed with dates that slip, cost estimates that increase, and features that never materialize. Paradoxically, while this culture of misleading documentation is a contributing factor for large and expensive failures, it also poses a serious obstacle to agile teams looking to improve how projects are delivered.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://sboots.ca/2020/01/28/introducing-agile-to-large-organizations-is-a-subtractive-process-not-an-additive-one/&quot;&gt;It’s not easy to subtract governance processes&lt;/a&gt; in an organization hyper-sensitive to risk (“let’s &lt;strong&gt;not do&lt;/strong&gt; this documentation and still be allowed to release”). Removing something that &lt;em&gt;looks&lt;/em&gt; safe (even a diagram that will soon be out of date) without an equivalent replacement is a tough sell.&lt;/p&gt;
&lt;p&gt;Once you set a precedent for problem-free releases, your proposals for systemic interventions will look much more credible. But you can easily end up logjammed trying to release your very first product(s) by being overly hostile to existing governance processes. Even though it’s not ‘real agile’, initial products will require some amount of gritting your teeth and hammering out documentation needed to get to a release. In order to scale your approach, you need to be able to release products — which means it must be the focus for your team as well as a priority for &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#exec-note&quot; id=&quot;exec-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;your executive sponsor(s)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;moving-fast-why-releasing-early-and-often-is-important&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#moving-fast-why-releasing-early-and-often-is-important&quot;&gt;&lt;span&gt;Moving fast: why releasing early and often is important&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The UK’s Government Digital Service popularized the slogan “&lt;a href=&quot;https://gds.blog.gov.uk/2013/01/06/digital-transformation-in-2013-the-strategy-is-delivery-again/&quot;&gt;the strategy is delivery&lt;/a&gt;”: advocating prototypes instead of documentation, demos instead of decks, and 2-week sprints instead of 4-year plans. Strategy documents proclaiming much and changing little are the norm in organizations with a culture of paperwork over working code, so “the strategy is delivery” emphasizes the inverse: don’t waste time building slide decks that would be better spent getting real products in front of real users.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://sboots.ca/2020/01/10/shipping/&quot;&gt;Shipping early&lt;/a&gt; is the best argument you can make against the reality of waterfall, because, done right, you will save huge amounts of time and money. By the same token, the longer it takes you to get products built and released, the more you resemble the expensive waterfall processes you seek to replace.&lt;/p&gt;
&lt;p&gt;This is why you &lt;em&gt;need&lt;/em&gt; to &lt;strong&gt;move fast&lt;/strong&gt;. In general, you want to define your MVP and then test it with users as soon as possible. Enterprise planning does not have a good answer to ‘user needs’, so it is important to prioritize early user engagement. User feedback both (a) gives you insight to improve your product and (b) functions as documentation you can share internally that other teams don’t typically have. Once you are confident that your product works, focus on what you need to do to get it released. It’s far better to have a released ‘alpha’ service than a highly-polished internal prototype.&lt;/p&gt;
&lt;p&gt;Of course, the tradeoff with ‘fast’ is that, conventionally understood, it means compromising on safety. Oversight groups are likely to view you as risky cowpokes who want to launch first and ask questions later, while they provide a measured and impartial analysis that protects the department from potential embarrassment. This is a dangerous characterization to have applied to you in the risk-paranoid context of a large department, so you need to do what you can to guard against this perception.&lt;/p&gt;
&lt;h2 id=&quot;being-safe-why-we-dont-want-to-break-things&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#being-safe-why-we-dont-want-to-break-things&quot;&gt;&lt;span&gt;Being safe: why we don’t want to ‘break things’&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When Mark Zuckerberg coined the phrase “move fast and break things,” he wasn’t talking to teams that need approval from an &lt;a href=&quot;https://www.tbs-sct.gc.ca/pol/doc-eng.aspx?id=32602#secA.2&quot;&gt;Enterprise Architecture Review Board&lt;/a&gt;. &lt;a href=&quot;https://qr.ae/pGLA6x&quot;&gt;“Move fast and break things”&lt;/a&gt; essentially means that you should prioritize speed over reliability: that it’s better to build and release your software super fast — even if not everything works yet or it breaks in older versions of Android.&lt;/p&gt;
&lt;p&gt;This is great advice for a typical startup, but in government this is exactly what we need to be careful of. Private-sector companies typically offer services that can be found elsewhere — if the Domino’s app breaks, I can still go to Pizza Pizza. But government services are often the only option people have: we can’t afford to ship code that causes someone to miss a benefit payment they rely on to pay their rent.&lt;/p&gt;
&lt;p&gt;When we compare smartphone apps to typical government services, it is clear that the ‘enterprise’ culture of oversight committees and architecture boards in no way guarantees great outcomes. But the thing is, nobody defends the status quo as the best possible system — in a government context, &lt;em&gt;it’s always about what could go wrong&lt;/em&gt;. Sure, occasionally a bug makes it through our 10 different oversight committees, but imagine the plague of locusts you would invite without them. Your agile team needs to demonstrate that what you’re doing isn’t &lt;em&gt;dangerous&lt;/em&gt;. While it’s important to be fast, you also have to &lt;strong&gt;be safe&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&quot;empowered-teams-vs-oversight-committees&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#empowered-teams-vs-oversight-committees&quot;&gt;&lt;span&gt;Empowered teams vs. oversight committees&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Waterfall governance creates extremely long (read: impractical) timelines, which means slow and expensive product development — but they are always justified in terms of safety. The fact that a team like yours exists means there is some desire to improve existing processes, but how to go about this is rarely spelled out. Assuming you have some high-level buy-in from an executive sponsor, you are probably going to be granted &lt;em&gt;some&lt;/em&gt; leeway to skip parts of the existing governance process. However, this sets up an obvious antagonistic relationship between your team and the various oversight committees, which becomes one of the primary challenges for you to manage.&lt;/p&gt;
&lt;p&gt;The less ‘enterprise’ documentation you write, the more you’ll provoke &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#docs-note&quot; id=&quot;docs-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;oversight groups who use that documentation to determine how ‘safe’ your product is&lt;/a&gt;. Oversight committees are used to teams attempting these kinds of shortcuts, and they are justifiably suspicious. To them, you are just another version of ‘let’s skip this boring governance stuff so we can ship a bunch of untested and risky software’, or — more colloquially — ‘let us skip the vegetables and go straight to dessert’. For them, it’s a question of who takes the fall: if there is a problem later on, they are likely to be blamed for not vetting you properly.&lt;/p&gt;
&lt;p&gt;‘Real agile’ says that empowered multi-disciplinary teams should have the skills on the team needed to build what they’re building. Governments have a legal obligation to build, say, accessible services, but there’s no legal requirement that mandates a dedicated accessibility team (which is sometimes how it’s presented). Digital teams with a robust workflow can (and do) meet accessibility requirements by following best practices. (In the UK, this is how most public services are built.)&lt;/p&gt;
&lt;p&gt;In the here and now though, you need to work productively with a team you are actually trying to replace (even though — really — you are just trying to do your work with minimum fuss). These groups will be apprehensive about your ‘empowered product team’ model because it is a direct challenge to current org structures. Therefore, they have an incentive to prove they are a valuable and necessary part of the IT delivery pipeline by catching you out on any mistakes you make or bugs that slip through.&lt;/p&gt;
&lt;p&gt;This means that you are likely to be closely scrutinized for any parts of the existing process that you skip, or are asking to skip. Even with a mandate to “push back” against existing governance, you can be sure that your push back will be pushed back. Any leeway you have is likely to be rolled back if problems are discovered that would theoretically have been prevented if you didn’t get the leeway.&lt;/p&gt;
&lt;h2 id=&quot;being-safe-in-agile&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#being-safe-in-agile&quot;&gt;&lt;span&gt;‘Being safe’ in agile&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For agile teams, there are 3 stock responses to how you are safer than traditional linear product development.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Agile reduces existential mistakes&lt;/strong&gt; in the design of a service: early user engagement mitigates the risk of launching a poorly performing service, something that existing governance processes do not address.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Agile reduces the cost of mistakes&lt;/strong&gt;: frequent iteration means smaller changes more often, which means mistakes tend to be smaller and faster to repair.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Agile reduces the likelihood of mistakes&lt;/strong&gt; without creating governance bottlenecks: quality checks can be done far more frequently using automation than by human assessors.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In addition to these orthodox agile arguments, there is a more existential point to consider.&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;&lt;strong&gt;Agile is, above all, a flexible approach that adapts quickly&lt;/strong&gt;. Agile teams are pragmatic in solving problems for users.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Point 1 has been discussed at length, so let’s look at the other 3.&lt;/p&gt;
&lt;h3 id=&quot;2-agile-reduces-the-cost-of-mistakes&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#2-agile-reduces-the-cost-of-mistakes&quot;&gt;&lt;span&gt;2. Agile reduces the cost of mistakes&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The risk-phobic approach of trying to prevent problems by layering on committees creates a doom loop (a cycle that gets worse over time). All these layers of governance are created to prevent costly mistakes, but mistakes are now so costly &lt;em&gt;because&lt;/em&gt; of excessive governance. By contrast, agile product development &lt;em&gt;reduces the cost of mistakes&lt;/em&gt;. When you are in the habit of releasing daily, bugs can be fixed within hours of being identified — whereas you could be looking at 3-6 months for more traditional teams.&lt;/p&gt;
&lt;p&gt;Unfortunately for you, enterprise organisations don’t have any tolerance at all for risk or bugs — to paraphrase one of my former security advisors, we are always just one typo away from the &lt;abbr title=&quot;Chief Information Officer&quot;&gt;CIO&lt;/abbr&gt; having to resign. Talking about how agile lets you fix stuff faster plays directly into the perception that you are blasé about shipping a higher volume of errors. This is a losing argument for you, so avoid it altogether if possible. Instead, head off this concern by focusing on a &lt;strong&gt;rigorous automated testing pipeline&lt;/strong&gt; that bakes quality into your codebase.&lt;/p&gt;
&lt;h3 id=&quot;3-agile-reduces-the-likelihood-of-mistakes&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#3-agile-reduces-the-likelihood-of-mistakes&quot;&gt;&lt;span&gt;3. Agile reduces the likelihood of mistakes&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Traditional enterprise governance relies on human gating to audit products before they are released. &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#toil-note&quot; id=&quot;toil-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;This is expensive to run and hard to scale&lt;/a&gt;. If you want to go twice as fast, you need to hire twice the staff. In contrast, agile software development seeks to replace this bottleneck with automated tests a computer can perform, usually in a matter of seconds. Automated tests are fast and give consistent feedback: they can be re-run for every single change to a codebase, whereas a human assessor responsible for many products might only have time to check once every several hundred changes.&lt;/p&gt;
&lt;p&gt;It is very common for security documentation to be out of date — once written, it describes how the system &lt;em&gt;used&lt;/em&gt; to work — whereas automated tests are up-to-date by definition. By prioritizing, as much as possible, automated over manual testing, software can be safely released multiple times per day instead of a handful of times per year without sacrificing quality. Skeptics will argue that more releases means more problems, but a comprehensive automated testing pipeline allows you to demonstrate that your way of working is actually &lt;em&gt;safer&lt;/em&gt; than the current baseline.&lt;/p&gt;
&lt;p&gt;However, even with a comprehensive suite of tests, you still need to engage with oversight groups who will expect you to go through the same steps as other teams. From their perspective, they are responsible for deciding if your product is safe or not, and just because you have built your own competing set of checks (which — big surprise — you managed to pass), it doesn’t exempt you from the ‘official’ process.&lt;/p&gt;
&lt;h3 id=&quot;4-agile-is-flexible&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#4-agile-is-flexible&quot;&gt;&lt;span&gt;4. Agile is flexible&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#long-term-oversight-as-bureaucratic-cement&quot;&gt;As I have previously written&lt;/a&gt;, enterprise departments give oversight groups authority over product teams. If an oversight group takes issue with something, they can advise against a particular product going ahead until specific conditions are met. Sometimes, senior executives will disregard this and just launch anyway, but most of the time a negative recommendation is enough to block a product’s release.&lt;/p&gt;
&lt;p&gt;Traditional oversight teams ask product teams for extensive written documentation about how their system works and is administered. It’s very common that this documentation goes quickly out of date and no longer describes the reality of the system. Agile practitioners call this “&lt;a href=&quot;https://en.wikipedia.org/wiki/Security_theater&quot;&gt;security theatre&lt;/a&gt;:” creating lots of documentation that, although it looks impressive, does not really guarantee a more secure final product.&lt;/p&gt;
&lt;p&gt;Modern digital organizations will bias in favour of the teams doing the work, assuming that they have more context and are in a better position to make decisions about their product. However, this is not the reality of agile teams in government.&lt;/p&gt;
&lt;p&gt;In government, oversight teams are able to block other product teams. Can they block yours? It’s probably not clear (you’re on a new team with an executive sponsor, maybe it will go ahead anyway), but at minimum you are looking at delays while everyone tries to figure out what happens next. Getting stalled undercuts your ability to &lt;strong&gt;move fast&lt;/strong&gt;, which is one of your advantages as an agile team. If adhering to agile orthodoxy leads to getting in fights with other groups, you could end up taking just as long as other teams while also generating a lot of conflict along the way — a much worse result than traditional teams that play by the rules.&lt;/p&gt;
&lt;p&gt;One of the tenets of agile is adopting pragmatic approaches that keep you moving forward. ‘&lt;strong&gt;Be safe&lt;/strong&gt;’ is as much about perception as it is about empirical results. After all, enterprise processes are assumed to be safe even when they consistently lead to poor outcomes. By buckling down and writing documentation, you buy yourself goodwill &lt;em&gt;and&lt;/em&gt; you increase your perception of safe conduct. That’s not to say you need to write all the documents you are asked to, just that you should pick your battles. You only have so much political capital as a new team with no track record — your immediate priority should be to &lt;em&gt;build&lt;/em&gt; that track record.&lt;/p&gt;
&lt;h2 id=&quot;moving-faster-or-being-safer&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#moving-faster-or-being-safer&quot;&gt;&lt;span&gt;Moving faster or being safer?&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To recap, the two important considerations for agile teams in large enterprises are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Delivering value quickly, which means getting something into the hands of users rapidly, without spending years in planning&lt;/li&gt;
&lt;li&gt;Managing (perceived) risk, which means guarding against mistakes and filling out forms when it’s expedient&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Teams that &lt;strong&gt;move fast&lt;/strong&gt; optimize for velocity and build quickly. Teams that &lt;strong&gt;are safe&lt;/strong&gt; take their time, focusing on testing pipelines and sometimes writing large documents.&lt;/p&gt;
&lt;p&gt;These two points appear to be in tension with each other. If you want maximum velocity, don’t write any tests. Just write code, ship it, and test it in production by having real users find bugs. On the other hand, if you want maximum safety, never release anything. &lt;a href=&quot;https://knowyourmeme.com/memes/roll-safe&quot;&gt;Software that never gets launched, never gets hacked&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So where should you come down on the ‘fast’ vs. ‘safe’ continuum? To answer this, figure out what you are up against. You don’t need to be at ‘maximum velocity,’ you just need to beat some of the slowest development timelines on earth. Plenty of internal strategy groups will be advocating some version of Ford’s “faster horses,” saying things like: ‘we can make this 2-year process take 22 months’. You don’t need to be lightning fast, you just need to improve on existing expectations.&lt;/p&gt;
&lt;h2 id=&quot;a-practical-example-launching-a-website-in-a-federal-department&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#a-practical-example-launching-a-website-in-a-federal-department&quot;&gt;&lt;span&gt;A practical example: launching a website in a federal department&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/&quot;&gt;In a previous post&lt;/a&gt;, I wrote about launching a citizen-engagement website in a federal department, so let’s take that as an example. Sure, it set some important precedents for the department (open source project, public prototypes, user research, etc), but as a technical product, it wasn’t that complex. Working full-time, it’s the kind of thing you could build in 3-4 weeks with a small team. But it didn’t take us 3-4 weeks, it took us 5 months.&lt;/p&gt;
&lt;p&gt;Just looking at that timeline, you might be like “wow Paul, that sucks,” which would be rude of you to say, but it’s a fair critique. Here’s the thing though, it’s still twice as fast as the typical 1-year turnaround time that the department is used to. We could have launched it sooner if we hadn’t had to write all that documentation and skimped on writing tests, but even with all that stuff we shot past our competition. Admittedly, we paid a heavy tax burden if you look at &lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#internal-words&quot;&gt;all the writing we had to do&lt;/a&gt;, but it got the job done. In the end, rather than getting into an imbroglio about documentation as ‘security theatre,’ it was easier to just write the damn things, get them reviewed, and get the site out.&lt;/p&gt;
&lt;p&gt;We were just one team, we were brand new in the department, and we were using an approach people weren’t familiar with. We didn’t have the authority or credibility to change existing processes or discard rules we didn’t agree with. We needed to get the site out by working with oversight groups who, like a Roman emperor in a coliseum, could cause us major headaches with a thumbs-down. In our case, we got there in the end by doing the work to avoid the perception that we represented a major risk, but not at the cost of exploding our timeline. We were able to be both &lt;strong&gt;fast&lt;/strong&gt; (by comparison), and &lt;strong&gt;safe&lt;/strong&gt; (writing tests and documenting our approach).&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-03-22-move-fast-stay-safe/#conclusion&quot;&gt;&lt;span&gt;Conclusion&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In traditional government culture, any change to the status quo is risky by definition. Ways of working that have largely been jettisoned in the private sector are still alive and well in government, although there is broad internal agreement that change is needed. As agile practitioners, the opportunity is clear: traditional government IT projects almost never stick to their budget or timeline, and often fail to deliver high-quality services.&lt;/p&gt;
&lt;p&gt;Given how bad the status quo actually is, it seems like a no-brainer to switch to a widely successful model of project delivery that prioritizes quick feedback and early return-on-investment. Agile teams get more done with less overhead, largely because they are empowered to make decisions.&lt;/p&gt;
&lt;p&gt;However, agile teams in the government operate under pretty tough conditions, typically having to seek accommodation with an existing culture of extreme risk-avoidance. The strength of agile teams is their focus on shipping early and improving incrementally — but you &lt;em&gt;do&lt;/em&gt; have to ship &lt;em&gt;something&lt;/em&gt;. Given this, it is extremely important to balance a commitment to safety with a desire to quickly get to a release.&lt;/p&gt;
&lt;p&gt;Blending two contradictory approaches is never going to be easy, but it’s important to remain focused on delivering real value for citizens. Getting into debates with groups that are meeting-aholics or writing position papers arguing against paperwork-centric approaches means fighting on unfavourable terrain. To win this argument, you need to stop arguing: instead, prove your approach works by getting it to work. Pick a product, keep a tight rein on your scope, get it into the hands of users, and tell your story along the way. &lt;strong&gt;Moving fast&lt;/strong&gt; shows what is possible, while &lt;strong&gt;being safe&lt;/strong&gt; ensures you are viable.&lt;/p&gt;

    </content>
  </entry>
  <entry>
    <title>Enterprise: the wrong bigger picture</title>
    <link href="https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/" />
    <updated>2022-01-24T00:00:00Z</updated>
    <id>https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/</id>
    <content type="html">
        &lt;nav class=&quot;table-of-contents&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#systems-a-working-definition&quot;&gt;Systems: a working definition&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#what-does-this-have-to-do-with-government&quot;&gt;What does this have to do with government?&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#the-enterprise-approach&quot;&gt;The Enterprise approach&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#single-disciplinary-teams&quot;&gt;Single-disciplinary teams&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#the-toll-road-to-enterprise-a-thought-experiment&quot;&gt;The toll road to enterprise: a thought experiment&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#short-term-oversight-that-misses-the-point&quot;&gt;Short term: oversight that misses the point&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#long-term-oversight-as-bureaucratic-cement&quot;&gt;Long term: oversight as bureaucratic cement&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#an-enterprise-exit-plan&quot;&gt;An enterprise exit plan&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#better-teams-multidisciplinary-instead-of-single-disciplinary&quot;&gt;Better teams: Multidisciplinary instead of single-disciplinary&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#a-better-principle-user-needs-over-consistency&quot;&gt;A better principle: User needs over consistency&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#better-systems-for-better-systemic-outcomes&quot;&gt;Better systems for better systemic outcomes&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/nav&gt;&lt;h2 id=&quot;introduction&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#introduction&quot;&gt;&lt;span&gt;Introduction&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Frequent visitors to my blog will know that essentially I have &lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/&quot;&gt;one other post&lt;/a&gt; about how hard and slow it was making a small website in a federal department. Over the summer, I was &lt;s&gt;complaining about&lt;/s&gt; describing the compliance process to my sister and she was like, “Yeah Paul, it’s the government. If you don’t like paperwork, why do you work there?”&lt;/p&gt;
&lt;p&gt;Wow, Julia, go for the jugular, why don’t you?&lt;/p&gt;
&lt;p&gt;I’ve been a civil servant my whole working life — in Canada, in the UK, at &lt;a href=&quot;https://twitter.com/westernusc&quot;&gt;Western U’s ‘student government’&lt;/a&gt; — and I’ve always had interesting stuff to work on and great colleagues. In fact, the public servants I know regularly go above and beyond — often overcoming awful processes and dated technology to get things done.&lt;/p&gt;
&lt;p&gt;But let’s not get the wrong end of the stick here: it’s obvious to anyone with any sustained interaction with the Canadian government that our public service isn’t out here winning &lt;a href=&quot;https://www.gov.uk/government/news/govuk-wins-design-of-the-year-2013&quot;&gt;Design of the Year&lt;/a&gt; or &lt;a href=&quot;https://www.cbc.ca/news/politics/free-automatic-tax-returns-benefits-1.5739678&quot;&gt;automatically filing our taxes&lt;/a&gt; (yet). More often we see stories about &lt;a href=&quot;https://www.theglobeandmail.com/politics/article-ottawa-paid-out-400-million-in-phoenix-pay-compensation-to-federal/&quot;&gt;big, expensive IT failures&lt;/a&gt; and generalized anxiety about “&lt;a href=&quot;https://policyoptions.irpp.org/magazines/november-2021/speaking-tech-to-power/&quot;&gt;old mainframes and technology, some on the verge of collapse&lt;/a&gt;.”&lt;/p&gt;
&lt;p&gt;My sister’s perspective that ‘government is just inherently slow and paperwork-heavy’ isn’t what you would call deeply nuanced, but there’s definitely a link between her pessimism and a pattern of costly failures. So how do we square this circle: how is it that so many dedicated and well-meaning public servants working all over the government deliver so much crappy software?&lt;/p&gt;
&lt;p&gt;When we start seeing &lt;em&gt;patterns&lt;/em&gt; like this — similar outcomes from disparate departments — it’s a pretty sure sign that we are dealing with &lt;em&gt;systems&lt;/em&gt; rather than particular teams or individuals. A strong swimmer traveling against the current will always go slower and use more energy than an average swimmer (like me) swimming &lt;em&gt;with&lt;/em&gt; the current. When a system works against you, you spend more energy and get less done — eventually wearing down even the most talented folks.&lt;/p&gt;
&lt;p&gt;So let’s talk about systems: what they are, what they do, and how, sometimes, the problem isn’t when our systems stop working, it’s when they work too well.&lt;/p&gt;
&lt;h2 id=&quot;systems-a-working-definition&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#systems-a-working-definition&quot;&gt;&lt;span&gt;Systems: a working definition&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A system is a set of parts working together. Broadly speaking, systems are created when you need to do something more than once. Systems can be composed of physical parts (like a car), but for this post I will focus on systems as sequences of actions. For example, &lt;a href=&quot;https://www.bonappetit.com/recipe/basically-spaghetti-pomodoro&quot;&gt;Basically Spaghetti Pomodoro&lt;/a&gt; is a sequence of actions resulting in, arguably, “THE best pomodoro sauce I’ve tasted at home.”&lt;/p&gt;
&lt;p&gt;Good systems know what ‘good’ looks like and have the flexibility needed to improve over time. In the UK, anyone can &lt;a href=&quot;https://www.gov.uk/apply-renew-passport&quot;&gt;apply for a new passport&lt;/a&gt; entirely online by &lt;a href=&quot;https://www.gov.uk/photos-for-passports#how-to-get-a-digital-photo&quot;&gt;submitting a digital photo from their smartphone&lt;/a&gt;. In Canada, you need to bring in a &lt;a href=&quot;https://www.canada.ca/en/immigration-refugees-citizenship/services/canadian-passports/photos.html&quot;&gt;physical regulation-sized photograph with a stamp and a ‘wet-ink’ signature on the back&lt;/a&gt;. Obviously, whoever designed the passport system several decades ago didn’t anticipate ubiquitous digital photography, but a good system adapts to a changing context.&lt;/p&gt;
&lt;p&gt;If good systems have clear priorities and are adaptable, bad systems are inflexible and confused about what is important. Even systems created with the best intentions degrade over time, so being able to cope with new situations is crucial.&lt;/p&gt;
&lt;h3 id=&quot;what-does-this-have-to-do-with-government&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#what-does-this-have-to-do-with-government&quot;&gt;&lt;span&gt;What does this have to do with government?&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Systems have everything to do with government. I’ve defined a system as a set of parts working together to achieve a goal — in a broad sense, a government is the same thing. More narrowly, governments love a good recipe. Whether you call them ‘policies,’ ‘processes,’ ‘procedures,’ or ‘paperwork,’ (or &lt;a href=&quot;https://www.thesaurus.com/browse/plan&quot;&gt;any other thesaurus.com alternative&lt;/a&gt;), government is stuffed with systematized ways of completing tasks.&lt;/p&gt;
&lt;p&gt;Sometimes these heavily-routinized approaches get out of hand, like &lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#internal-words&quot;&gt;when releasing a small website means writing a novel’s worth of paperwork&lt;/a&gt;. Governments are notorious for this kind of over-the-top bureaucratic process (known as ‘red-tape’).&lt;/p&gt;
&lt;p&gt;While writing 36 thousand words is obviously too much for a simple website, this isn’t a post to make that argument. Instead, I want to talk about &lt;em&gt;why is it like this&lt;/em&gt;? How did we end up with processes that are okay with writing 36 thousand words?&lt;/p&gt;
&lt;p&gt;Systems don’t always work that well, but they are always &lt;em&gt;supposed to&lt;/em&gt;. The processes we encounter — even if they seem illogical — were all deliberately introduced and there’s a reason they are still around. Usually there is an important principle they are meant to upload, it’s just a matter of finding it.&lt;/p&gt;
&lt;p&gt;In the world of traditional government IT, there is one fundamental principle that almost no amount of usable software is worth trading for, and that principle is “&lt;strong&gt;enterprise&lt;/strong&gt;.” Investigating what it means to be ‘enterprise’ (and build ‘enterprise software’) helps us to better understand the processes we have, the teams created to enforce those processes, and how, ultimately, we get the outcomes we deserve.&lt;/p&gt;
&lt;h2 id=&quot;the-enterprise-approach&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#the-enterprise-approach&quot;&gt;&lt;span&gt;The Enterprise approach&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Canadian federal government, &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#uk-note&quot; id=&quot;uk-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;to a degree I never experienced in the UK&lt;/a&gt;, loves the word “enterprise”. &lt;a href=&quot;https://sboots.ca/2021/02/14/if-you-want-enterprise-services-to-be-good-make-them-optional/&quot;&gt;‘Enterprise’ is used both as a descriptor and an aspiration&lt;/a&gt;: it describes the kind of organization we are, but it is also an &lt;a href=&quot;https://www.canada.ca/en/shared-services/ssc-3-enterprise-approach.html&quot;&gt;all-important principle to uphold&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before joining the Canadian public service, my understanding of “enterprise software” was something closer to ‘an ugly and hard-to-use backend system imposed on a captive workforce,’ but obviously this was just an uninformed impression and has no bearing on reality. Anyway, we’re here now, so let’s give it a fair shake.&lt;/p&gt;
&lt;p&gt;The fundamental idea behind ‘enterprise’ is ‘&lt;em&gt;consistency&lt;/em&gt;.’ If you are an ‘enterprise,’ it means you are a large organization with lots of teams and you want to make sure you are doing the same thing across those teams. Broadly understood, we could sum up the ‘enterprise’ mindset as: “if we have the same problem in different places, we should solve it the same way.”&lt;/p&gt;
&lt;p&gt;This idea(l) is essentially positive and it appeals to an innate sense of fairness and objectivity most of us would agree with: that governments shouldn’t discriminate between people. For example, if I apply for a passport from Rivière-du-Loup, it wouldn’t be &lt;em&gt;fair&lt;/em&gt; for it to cost twice as much it would in Ottawa.&lt;/p&gt;
&lt;p&gt;Much of the time, this focus on standards is useful. There are lots of things it makes sense to standardize on: team calendars, predictable email addresses, headers and footers that don’t change as you move between different sections of a larger site. The consistent look-and-feel shared by (most) departmental websites is a triumph of enterprise-centric thinking.&lt;/p&gt;
&lt;p&gt;Moveover, it’s also &lt;em&gt;risky&lt;/em&gt; for government services to be inconsistent. Governments can be sued for failing to providing consistent outcomes — for example, &lt;a href=&quot;https://www.cbc.ca/news/canada/blind-woman-wins-case-against-federal-government-1.956042&quot;&gt;when government services aren’t accessible to different types of users&lt;/a&gt;. Thus, consistency can help both to simplify internal workflows and protect government departments from potential lawsuits.&lt;/p&gt;
&lt;p&gt;But like with any high-minded principle, you can take ‘consistency’ too far — say writing a book’s worth of oversight documentation for a small site because it’s what you would do for a large site. While this level of oversight can seem absurd, it begins to make sense if we assume a core organizational principle of ‘consistency at any cost’ (sometimes literally, considering IT budgets for large projects &lt;span aria-hidden=&quot;true&quot;&gt;🙊&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;But processes and principles are just words; organizations are made up of people. The outputs of any system depend on the people working within it, and we can learn a lot by looking at the makeup and incentives of internal teams. Specifically, enterprise-first environments tend to create silos of specialists that focus on internal oversight rather than external outcomes.&lt;/p&gt;
&lt;h3 id=&quot;single-disciplinary-teams&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#single-disciplinary-teams&quot;&gt;&lt;span&gt;Single-disciplinary teams&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Enterprise environments love creating &lt;em&gt;single-disciplinary teams&lt;/em&gt;: teams in which everyone has the same skill set (eg, a legal team of lawyers). &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#single-disiplinary-teams-note&quot; id=&quot;single-disiplinary-teams-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;Single-disciplinary teams&lt;/a&gt; are rooted in a desire to ensure consistency across a line of products. These teams are responsible for creating org-wide standards, and for &lt;em&gt;advising&lt;/em&gt; and &lt;em&gt;approving&lt;/em&gt; products (but rarely for building them).&lt;/p&gt;
&lt;p&gt;On first blush, grouping people by role and giving them oversight across a range of products might not seem like too bad of an idea, but pretty quickly you start losing time and context as projects bounce around between these narrowly-focused teams. However, these are &lt;em&gt;emergent&lt;/em&gt; problems: they aren’t obvious at the outset but get worse as organizations grow. Let’s see how some of these dynamics play out by running through an imagined scenario.&lt;/p&gt;
&lt;h3 id=&quot;the-toll-road-to-enterprise-a-thought-experiment&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#the-toll-road-to-enterprise-a-thought-experiment&quot;&gt;&lt;span&gt;The toll road to enterprise: a thought experiment&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let’s imagine we run a small company. Let’s call ourselves EasyTax: we make a tax filing app for Canadians, and we have 6 employees in total: two developers, a designer, a marketer, a tax lawyer, and a founder who is responsible for product decisions. At this point, we have 1 product and 1 team. Each member contributes their specific expertise while also understanding the overall goal: building a great tax filing product.&lt;/p&gt;
&lt;p&gt;A few years later, our tax software is so popular that we have 5 different apps for different tax-filing scenarios: for individuals, for businesses, for students, for pet-owners, for government tech bloggers. Now there are 5 product teams, one for each app, and all with the same makeup as my original team.&lt;/p&gt;
&lt;p&gt;On our 5 individual teams, we have 5 individual designers. But since each team works independently, variations emerge between products. When filing taxes, there are a large list of credits to sort through.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One team keeps them all in a big list&lt;/li&gt;
&lt;li&gt;Another team uses &lt;a href=&quot;https://www.nngroup.com/articles/mobile-accordions/&quot;&gt;accordions&lt;/a&gt; to show or hide tax credits&lt;/li&gt;
&lt;li&gt;A third team has a search box to look them up&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Even though ‘showing tax credits’ is a common experience between all of my products, my designers are working independently and have implemented different solutions.&lt;/p&gt;
&lt;p&gt;Under the ‘enterprise’ model, this is no good. We don’t want each designer coming up with stuff on their own — now we have inconsistent outcomes. To rectify this, let’s create a centralized team made up only of designers. This new team will create ‘best-practice’ designs (eg, for showing tax credits) and then standardize it across products. This means individual product teams no longer have a dedicated designer, but instead we have a ‘design team’ responsible for reviewing and approving designs for &lt;em&gt;every&lt;/em&gt; team.&lt;/p&gt;
&lt;p&gt;If we imagine each of our products as a pie, we started with 5 pies and each pie had 1 designer assigned to it. Now, we have 1 consolidated design team responsible for a 10% slice of &lt;em&gt;every&lt;/em&gt; pie — but only for how the pie looks, it doesn’t matter how it tastes.&lt;/p&gt;
&lt;p&gt;Now that the design problem is solved, we want to do this with other roles too. Let’s create a legal team, a marketing team, and an architecture team. Instead of working on specific products from start to finish, each of these specialized teams is responsible for a slice of all products, so now all of our pies look like pie graphs (see figures below).&lt;/p&gt;
&lt;details&gt;
    &lt;summary&gt;Figure 1: Product teams with clear responsibility&lt;/summary&gt;
    &lt;div&gt;
      &lt;figure&gt;
      &lt;img alt=&quot;Figure 1: Autonomous teams with clear responsibility&quot; src=&quot;https://federal-field-notes.ca/img/articles/pies.png&quot; /&gt;
      &lt;figcaption&gt;
      &lt;p&gt;3 autonomous product teams, each responsible for 1 product. Arrows represent responsibility for products. Responsibility is clear: there are 3 arrows, each product team is responsible for 1 product.&lt;/p&gt;
      &lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Figure 2: Advisory teams with complex responsibilities&lt;/summary&gt;
    &lt;div&gt;
      &lt;figure&gt;
      &lt;img alt=&quot;Figure 2: Advisory teams with complex responsibilities&quot; src=&quot;https://federal-field-notes.ca/img/articles/pies-2.png&quot; /&gt;
      &lt;figcaption&gt;
      &lt;p&gt;3 product teams and 3 advisory teams, sharing responsibility for 3 products. Arrows represent responsibility for products. Responsibility is complex: there are 12 arrows, each product team is mostly responsible for 1 product, and each advisory team is partially responsible for every product.&lt;/p&gt;
      &lt;/figcaption&gt;
      &lt;/figure&gt;
    &lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;Each time we create a new centralized oversight team, the actual team doing the work gets smaller, while the number of people “&lt;a href=&quot;https://sboots.ca/2021/10/04/if-your-technology-leadership-is-more-into-blockchain-than-user-needs-youre-doomed/#leadership-density-or-leadership-signal-vs-noise&quot;&gt;involved in oversight, gate-keeping, and green-lighting&lt;/a&gt;” increases. The upshot of this process is that &lt;strong&gt;we are losing more time in meetings while reducing overall team capacity.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With all of our oversight teams ‘advising’ on every product, things start getting pretty confusing. (Imagine organizing an enterprise-style potluck where each person invited needs to provide 1 ingredient for every dish.) A lot of time is lost emailing to coordinate reviews and approvals for all our ongoing work. To address this, let’s come up with &lt;em&gt;a really clear and detailed plan&lt;/em&gt; that outlines exactly what everyone needs to do at every step.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1HqtvTM7MksL6DpXXBxVut_6HuzGN-dH9KBtIlB5emAY/edit#slide=id.gf933083904_0_39&quot;&gt;Here is an example of what our really detailed and not-confusing plan might look like&lt;/a&gt;. (&lt;em&gt;psst, read the notes for the slide&lt;/em&gt;.) It’s a little hard to see in the diagram, but it visualizes an internal release pipeline that includes 93 discrete steps.&lt;/p&gt;
&lt;p&gt;So, in this thought experiment, what started as a fairly intuitive team structure where everyone works together on a shared goal has turned into a highly choreographed performance where products ping-pong around between &lt;a href=&quot;https://twitter.com/honeygolightly/status/1225095639144550400&quot;&gt;teams that mostly watch, rather than do&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In breaking up our product teams into siloed teams of specialists, we &lt;em&gt;do&lt;/em&gt; have clearer standards in place although now everything takes longer. But is this actually a problem? Things &lt;em&gt;are&lt;/em&gt; slower with all the extra meetings, but isn’t this preferable to an organization of uncoordinated, independent teams potentially overlooking the bigger picture?&lt;/p&gt;
&lt;p&gt;Well, it turns out there is more than just one bigger picture. There is a short-term and a long-term cost to this kind of org structure. In the short term, teams narrowly-focused on a single domain can end up missing the forest for the wrong forest. And in the long term, an over-emphasis on following standards can easily lead to internal stagnation.&lt;/p&gt;
&lt;h3 id=&quot;short-term-oversight-that-misses-the-point&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#short-term-oversight-that-misses-the-point&quot;&gt;&lt;span&gt;Short term: oversight that misses the point&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Once upon a time, I was on a team building a user recruitment site. After putting together some early designs and beginning work on the first few pages, we reached out to the oversight teams we needed approval from.&lt;/p&gt;
&lt;p&gt;The group advising on data security looked over our designs and frowned at the signup form. They strongly advised us to remove the ‘email’ field. If we did that, they said, it would be easier to approve our project because not collecting personal data is better for data security.&lt;/p&gt;
&lt;p&gt;But &lt;em&gt;the whole point of our site&lt;/em&gt; was to collect the emails of interested users, we rebutted. How would we follow up with people if we had no way to contact them?&lt;/p&gt;
&lt;p&gt;‘Well, I am just telling you, it will be harder to get it approved this way,’ was the response.&lt;/p&gt;
&lt;p&gt;Well-meaning advice, to be sure, but it completely overlooked our team’s goal. It didn’t make sense to build a user recruitment website that couldn’t actually recruit users. From our perspective, this group didn’t understand the bigger picture of what our site was for.&lt;/p&gt;
&lt;p&gt;However, from the data team’s perspective, &lt;em&gt;we&lt;/em&gt; were the ones missing the big picture. Their responsibility was data security writ large, and data you &lt;em&gt;don’t&lt;/em&gt; collect can never be hacked or leaked. Their standard recommendation — ‘don’t collect emails’ — was consistent with their goal of reducing personal data collection across the organization. So there was actually &lt;em&gt;a&lt;/em&gt; bigger picture here, it was just the wrong bigger picture for our site.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“A foolish consistency is the hobgoblin of little websites”&lt;br /&gt;
— &lt;a href=&quot;https://en.wiktionary.org/wiki/a_foolish_consistency_is_the_hobgoblin_of_little_minds&quot;&gt;Ralph Waldo Emerson&lt;/a&gt;, replying-all after our meeting&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Despite the surrealism of that discussion, we ultimately kept the email field and went on to launch the site. Even though we spent some time in unproductive meetings, we still got our way in the end. Problem solved, right? Well, maybe in the short-term, but in the long-tem, this ‘enterprise’ preference for rigid standards over flexible implementation can result in a stagnant organizational culture incapable of incorporating new tools or ideas.&lt;/p&gt;
&lt;h3 id=&quot;long-term-oversight-as-bureaucratic-cement&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#long-term-oversight-as-bureaucratic-cement&quot;&gt;&lt;span&gt;Long term: oversight as bureaucratic cement&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In an enterprise organization, local variations are heavily discouraged. They aren’t impossible, but they’re certainly not easy. Under normal circumstances, you shouldn’t do things like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;install applications that aren’t pre-approved&lt;/li&gt;
&lt;li&gt;add new technology to your tech stack that hasn’t been vetted&lt;/li&gt;
&lt;li&gt;use designs that aren’t standard&lt;/li&gt;
&lt;li&gt;sign up for new services other teams aren’t using&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In &lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#the-content-management-system-an-example&quot;&gt;my previous article&lt;/a&gt;, I outlined how a ‘maximum risk’ interpretation of adding a CMS to our website resulted in excessive documentation. On this same team, we burned a lot of time and energy requesting an online task-tracking app (a bit like a team todo-list: you use it to keep track of who is working on what). The reason it became such a sticking point was that a different task-tracking app was internally pre-approved for all teams to use.&lt;/p&gt;
&lt;p&gt;To take the ‘enterprise’ perspective: there was already a standard solution in place and our team was being troublesome in trying to contravene it. If this application really was that much better, why didn’t we use &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#new-software-note&quot; id=&quot;new-software-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;the “request new software” process&lt;/a&gt; and submit it as the new standard for all teams to use? Why should we be different, picking our own thing that nobody else was using? Moreover, everyone knows it’s cheaper to ‘buy in bulk’ rather than spending small amounts for one team at a time.&lt;/p&gt;
&lt;p&gt;It took us about 6 months of intermittent meetings, written justifications, trial accounts, etc, before it was finally approved for our use. ‘Buying in bulk’ to save money is a good theory, but it doesn’t consider the loss of productivity from teams finding workarounds for clunky tools — not to mention the cost of these long-running discussions. We likely spent more money in employee salaries to attend meetings and write documentation than if we had been allowed to &lt;a href=&quot;https://sboots.ca/2021/07/11/paying-for-low-cost-cloud-services-on-a-departmental-credit-card/&quot;&gt;make a low-cost purchase on a credit card&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In my past job at the UK government, we would have made our decision in the morning and had it set up by the afternoon.&lt;/p&gt;
&lt;p&gt;In the short/medium term, problems like these can often be resolved. However, the pernicious long-term effect is one where it costs so much time and energy to introduce new ideas or processes that eventually your whole tech stack (and maybe &lt;a href=&quot;https://www.justice.gc.ca/eng/index.html&quot;&gt;your homepage&lt;/a&gt;) looks like it came out of a time capsule. The ‘enterprise’ preference for layering on oversight and approvals is essentially a kind of bureaucratic cement that slows down your organizational agility over time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Without an easy way for teams to try out new technologies, new software, and new designs, you wind up stifling your long-term ability to incrementally modernize.&lt;/strong&gt; It’s true that consistency is important, but, taken to an extreme, it can lead to a situation where teams are structurally unable to introduce new ideas. Once that happens, you end up relying on massively expensive, hugely disruptive ‘transformation/modernization’ megaprojects, which try to introduce a raft of new technologies and process changes all at once. In other words, &lt;a href=&quot;https://large-government-of-canada-it-projects.github.io/#are-large-it-projects-likely-to-be-successful&quot;&gt;exactly the kind of large IT projects that fail most often&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;an-enterprise-exit-plan&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#an-enterprise-exit-plan&quot;&gt;&lt;span&gt;An enterprise exit plan&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Hopefully by this point you’re open to the idea that ‘enterprise’ is Not That Chill. Consistent look and feel and standardized outcomes are important principles, but not when it means multiplying all your timelines by a factor of 10 and losing internal cohesion to information silos.&lt;/p&gt;
&lt;p&gt;However, as Billy McFarland famously said “&lt;a href=&quot;https://www.rollingstone.com/culture/culture-features/fyre-festival-billy-mcfarland-cult-positivity-optimism-783443/&quot;&gt;We’re not a problems-focused group, we’re a solutions-oriented group, we need to have a positive attitude about this&lt;/a&gt;.” It’s all well and good to burn down 50 years’ worth of organizational theory in a blog post, but what are my solutions?&lt;/p&gt;
&lt;p&gt;It’s a fairly long post already, so I will be (relatively) brief — but I plan to expand on these themes in future posts (&lt;a href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#bd-email&quot;&gt;sign up&lt;/a&gt;! It will be a hoot! &lt;span aria-hidden=&quot;true&quot;&gt;🦉&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;This post has focused on two problematic aspects of ‘enterprise’ culture:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;‘Consistency’ as &lt;em&gt;the&lt;/em&gt; all-important principle to uphold&lt;/li&gt;
&lt;li&gt;Single-disciplinary teams that approve products but don‘t build them&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let’s address them in reverse order.&lt;/p&gt;
&lt;h3 id=&quot;better-teams-multidisciplinary-instead-of-single-disciplinary&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#better-teams-multidisciplinary-instead-of-single-disciplinary&quot;&gt;&lt;span&gt;Better teams: Multidisciplinary instead of single-disciplinary&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;‘Enterprise’ organizations rely on single-disciplinary teams where everyone has &lt;em&gt;one&lt;/em&gt; skill but works across &lt;em&gt;many&lt;/em&gt; products. If we compare this way of working to how teams are organized in modern software companies (or &lt;a href=&quot;https://www.ontario.ca/page/digital-service-standard#section-3&quot;&gt;modern teams in other governments&lt;/a&gt;) we see exactly the opposite approach being implemented successfully. Multi-disciplinary teams work on &lt;em&gt;one&lt;/em&gt; product and include &lt;em&gt;all the skills needed&lt;/em&gt; to build and operate a working service.&lt;/p&gt;
&lt;p&gt;Importantly, these teams must have authority over their products. Multidisciplinary teams working in an oversight-centric ‘enterprise’ environment &lt;em&gt;are&lt;/em&gt; able to design and build their own products to some degree, but team decisions can always be vetoed by groups with approval authority. Creating multidisciplinary teams is a good start, but their effectiveness will be limited if they can still be overruled later.&lt;/p&gt;
&lt;p&gt;If we rewind to the start of our EasyTax thought experiment, this is exactly the kind of team we started with. Small, multidisciplinary product teams chat with each other instead of booking meetings, and all team members understand the overall goal they are trying to achieve. By keeping teams nimble and reducing organizational gatekeeping, we end up with teams that are more effective: taking less time to deliver services that users prefer.&lt;/p&gt;
&lt;h3 id=&quot;a-better-principle-user-needs-over-consistency&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#a-better-principle-user-needs-over-consistency&quot;&gt;&lt;span&gt;A better principle: User needs over consistency&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In an enterprise organization, ‘consistency’ isn’t just a ‘nice-to-have’, it’s the central assumption from which everything flows. The standards-centric mindset of the enterprise approach is a really clear principle: it helps us structure teams, put together policies, and suggests how to approach decisions. To quote Archimedes, “Give me but one firm spot on which to stand and I will move the earth.” If we scrap ‘consistency,’ where do we stand?&lt;/p&gt;
&lt;p&gt;The answer is ‘user needs’. User needs is the &lt;a href=&quot;https://www.gov.uk/guidance/government-design-principles#start-with-user-needs&quot;&gt;#1 design principle in the UK government&lt;/a&gt;, and incidentally, it’s also at &lt;a href=&quot;https://www.canada.ca/en/government/system/digital-government/government-canada-digital-standards.html#ds1&quot;&gt;the top of the Government of Canada’s Digital Playbook&lt;/a&gt;. Whenever you find yourself at a crossroads, ask ‘What is best from a user’s perspective?’&lt;/p&gt;
&lt;p&gt;Let’s think about applying for a passport in Canada: would it be better to allow digital uploads or to stick with physical photos? Taking a departmental perspective, physical photos are harder to fabricate and we currently have the resources and expertise to manage them. But let’s reframe this from the end user’s perspective: What will make this service the easiest to use for the most people? If we asked 10 people at the mall right now, what would they tell us? Undoubtedly, we will find that digital uploads are preferred by people applying for passports in Canada today.&lt;/p&gt;
&lt;p&gt;The example of the user recruitment site I worked on is revealing here too. You can understand why the data security team would suggest removing the email field from the signup form, but no user would ask for that change.&lt;/p&gt;
&lt;p&gt;‘User needs’ corrects for a serious bias in our org design. &lt;strong&gt;Of all the internal teams we have to meet with to triple-check and approve all of our decisions, the actual users of the service are almost never present in these negotiations.&lt;/strong&gt; You can get approved by &lt;em&gt;every group&lt;/em&gt; you have to meet with, and &lt;em&gt;still&lt;/em&gt; end up releasing a site that doesn’t work for its intended audience. This is how you end up with &lt;a href=&quot;https://digital.hbs.edu/platform-rctom/submission/the-failed-launch-of-www-healthcare-gov/&quot;&gt;problematic launches like the original healthcare.gov&lt;/a&gt;, where, despite the huge number of people involved (and an eye watering amount of cash), it failed as soon as real people tried using it.&lt;/p&gt;
&lt;h2 id=&quot;better-systems-for-better-systemic-outcomes&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2022-01-24-enterprise-the-wrong-bigger-picture/#better-systems-for-better-systemic-outcomes&quot;&gt;&lt;span&gt;Better systems for better systemic outcomes&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Keeping an eye on the big picture is important, but we have multiple bigger pictures to choose from. The best bigger picture is the one that puts end users first — it’s the most likely to lead to services that are clear and easy to use. Under an ‘enterprise-first’ organization, many of the procedures set up are internally-focused, with compliance teams asking themselves ‘What is best for this department?’ We need to transition to processes that look outwards, asking what is best for Canadians.&lt;/p&gt;
&lt;p&gt;The systems we encounter at work are not inevitable or eternal. They are designed and implemented by human beings, and when they work properly, they help us get things done more easily than if we didn’t have them. Good systems are useful, adaptable, and consistently deliver good outcomes. Once a system is none of these things, it’s time to change.&lt;/p&gt;

    </content>
  </entry>
  <entry>
    <title>Paperweight: a cautionary tale of onerous oversight</title>
    <link href="https://federal-field-notes.ca/articles/2021-12-15-paperweight/" />
    <updated>2021-12-15T00:00:00Z</updated>
    <id>https://federal-field-notes.ca/articles/2021-12-15-paperweight/</id>
    <content type="html">
        &lt;nav class=&quot;table-of-contents&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#why-is-it-so-hard&quot;&gt;Why is it so hard?&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#old-approaches-to-new-ideas&quot;&gt;Old approaches to new ideas&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#talking-about-what-we-do&quot;&gt;Talking about what we do&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#spreading-the-message&quot;&gt;Spreading the message&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#summing-up&quot;&gt;Summing up&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#our-site-in-numbers&quot;&gt;Our site, in numbers&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#coding-in-the-open&quot;&gt;Coding in the open&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#measuring-the-hard-to-measure&quot;&gt;Measuring the hard to measure&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#internal-words&quot;&gt;Internal words&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#how-many-words-is-a-lot-of-words&quot;&gt;How many words is a lot of words?&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#public-words&quot;&gt;Public words&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#how-did-we-get-here&quot;&gt;How did we get here?&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#the-content-management-system-an-example&quot;&gt;The Content Management System: an example&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#the-way-forward-when-less-is-better&quot;&gt;The way forward: when less is better&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/nav&gt;&lt;h2 id=&quot;introduction&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#introduction&quot;&gt;&lt;span&gt;Introduction&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;On July 31st, in the year of our Lord 2021, my team, working in a federal department, launched &lt;a href=&quot;https://alpha.service.canada.ca/home&quot;&gt;a new website for citizen engagement&lt;/a&gt;. By showcasing early versions of ongoing projects and inviting Canadians to give feedback, our “Labs” site prioritizes &lt;a href=&quot;https://www.canada.ca/en/government/system/digital-government/government-canada-digital-standards.html#ds3&quot;&gt;transparency&lt;/a&gt; and &lt;a href=&quot;https://www.canada.ca/en/government/system/digital-government/government-canada-digital-standards.html#ds1&quot;&gt;accountability to citizens&lt;/a&gt; — important ideals that traditional government projects don’t always live up to. Despite the implied Grand Ideals™ however, it’s a relatively simple site: the equivalent of putting a small blog online. To a casual visitor, it has 4 pages and it does 2 things: you can see &lt;a href=&quot;https://alpha.service.canada.ca/projects&quot;&gt;a list of upcoming new services&lt;/a&gt;, and you can &lt;a href=&quot;https://alpha.service.canada.ca/signup&quot;&gt;volunteer to test them out&lt;/a&gt;. In large part due to its inherent simplicity, our small but determined team was able to launch it on time.&lt;/p&gt;
&lt;p&gt;Did it feel good to finally release it? Heck yes.&lt;/p&gt;
&lt;p&gt;Was it easy to get there? F*ck no.&lt;/p&gt;
&lt;h2 id=&quot;why-is-it-so-hard&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#why-is-it-so-hard&quot;&gt;&lt;span&gt;Why is it so hard?&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;“&lt;a href=&quot;https://www.nytimes.com/interactive/2016/11/13/magazine/design-issue-code-for-america.html&quot;&gt;Why is it so hard to make a website for the government?&lt;/a&gt;” asks a twirling ASCII banana in a 2016 New York Magazine feature — something many of us have surely wondered. Well, this is the kind of deceptively simple question that probably merits a working group or at least 3 committees with overlapping acronyms. But since I don’t have 3 years to not come up with an answer, let’s see if we can glean any wisdom from my experience building and releasing a small cloud-hosted site in a large federal department.&lt;/p&gt;
&lt;h3 id=&quot;old-approaches-to-new-ideas&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#old-approaches-to-new-ideas&quot;&gt;&lt;span&gt;Old approaches to new ideas&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;About a decade ago, the &lt;a href=&quot;https://www.gov.uk/government/organisations/government-digital-service/about&quot;&gt;Government Digital Service&lt;/a&gt; in the UK spearheaded a new style of online service delivery characterized by smaller, autonomous teams making quick, iterative releases and &lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#open-by-default&quot;&gt;openly talking about their work&lt;/a&gt;. Rather than burning heaps of time writing ‘make-work’ documents for internal committees, digital product teams in the UK (and I worked on several) focus on quickly building services and then testing them with actual citizens. It was found to be a successful model — leading to cheaper, faster, and better quality online services — and they haven’t looked back since.&lt;/p&gt;
&lt;p&gt;The Government of Canada has not yet undergone a large-scale transition in this direction, although there are some attempts being made (&lt;a href=&quot;https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert.html&quot;&gt;COVID Alert&lt;/a&gt;, for example, was &lt;a href=&quot;https://sboots.ca/2020/10/30/working-in-the-open-firsts-for-covid-alert/&quot;&gt;built quickly and in the open&lt;/a&gt;). More commonly, however, Canadian federal government IT projects can easily spend months or years and (tens of) millions of dollars in “planning phases” before any part of the service is actually ready to be used by actual Canadian citizens.&lt;/p&gt;
&lt;p&gt;Traditional IT government projects try to guard against the possibility of costly mistakes by requiring product teams to seek approvals from a revolving door of committees and groups. Unfortunately, the accumulated time and energy spent appeasing these various gatekeepers can be just as costly to the team as the mistakes they are trying to prevent. In our case, our 12-page website needed approval from around 8 different groups over a 6-month period.&lt;/p&gt;
&lt;p&gt;In the alternative team-based model widely used in the UK, &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#users-note&quot; id=&quot;users-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;the possibility of costly mistakes is mitigated by actively reaching out to and testing the service with its eventual users&lt;/a&gt;. By focusing on getting feedback early and often from end users, mistaken assumptions are corrected early in the process by those whose opinions will ultimately matter the most.&lt;/p&gt;
&lt;p&gt;Our “Labs” site, intended to facilitate exactly this kind of citizen engagement and testing, is a small but important step in creating a more responsive, more accountable government. Unfortunately, actually launching it meant slogging through a morass of meetings and meddlers. It’s all well and good to champion tomorrow’s leaner and faster ways of working, but in our present context, we were firmly trapped in the past.&lt;/p&gt;
&lt;h2 id=&quot;talking-about-what-we-do&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#talking-about-what-we-do&quot;&gt;&lt;span&gt;Talking about what we do&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#closed-by-default&quot;&gt;The federal government tends to be pretty buttoned up&lt;/a&gt; about what it’s working on and how things are going. Sometimes this is justified: state secrets, upcoming changes to the tax code, military evacuations — there are definitely things that need to be closely guarded lest they put people in danger or let people game the system. Building a small website to ask Canadians for feedback on prototypes is absolutely &lt;strong&gt;not&lt;/strong&gt; something that belongs in that category. Rather, my experience reveals something common across government: &lt;a href=&quot;https://sboots.ca/2021/01/12/onerous-levels-of-oversight/&quot;&gt;onerous levels of oversight&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As in our case, it often happens that the compliance activities demand more time and energy than actually delivering the outcome. But how can we attempt to measure this, and what are the factors that lead to this outcome? Well, I’m glad you asked.&lt;/p&gt;
&lt;h3 id=&quot;spreading-the-message&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#spreading-the-message&quot;&gt;&lt;span&gt;Spreading the message&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The kernel of this post is a presentation I gave a week after launch. Our core product team was deliberately small enough to get things done without getting in each other’s way, but this means you have to talk about what you do if you want people to hear about it.&lt;/p&gt;
&lt;p&gt;(This is a good thing, by the way. Small teams getting on with their work and giving demos is far better than large teams where everyone knows nothing is going on.)&lt;/p&gt;
&lt;p&gt;Having a small, multidisciplinary team meant we could quickly build the site itself, but it also resulted in our nearly getting snowed under as we progressed through the various internal gatekeepers.&lt;/p&gt;
&lt;p&gt;My sense was that most of our compliance activities were based on inertia rather than utility, and I didn’t believe it was widely understood how much was being asked of us. So after the launch I put some numbers together to at least partially answer the question: “Why is it so hard to make a website for the government?”&lt;/p&gt;
&lt;p&gt;So! With no further ado, this is a numbers-centric look at what it took to launch our “Labs” site inside a large federal department.&lt;/p&gt;
&lt;h2 id=&quot;summing-up&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#summing-up&quot;&gt;&lt;span&gt;Summing up&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To recap, we launched a user engagement site for the teams working on the next iteration of the department’s user portal. The site hosts &lt;a href=&quot;https://alpha.service.canada.ca/projects&quot;&gt;a public listing of prototypes&lt;/a&gt; — ‘sneak previews’ of new services being worked on. You can also &lt;a href=&quot;https://alpha.service.canada.ca/signup&quot;&gt;sign up to be a ‘user research participant’&lt;/a&gt; and give feedback on early versions of new services.&lt;/p&gt;
&lt;p&gt;So that’s it: it’s a list of prototypes and a signup form.&lt;/p&gt;
&lt;p&gt;But let’s be more data-y about this — by which I mean, &lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#numbers-note&quot; id=&quot;numbers-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;let’s use numbers to tell a story&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;our-site-in-numbers&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#our-site-in-numbers&quot;&gt;&lt;span&gt;Our site, in numbers&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here are some basic numbers that give a sense of what we’re talking about.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt; website&lt;/li&gt;
&lt;li&gt;&lt;code&gt;12&lt;/code&gt; pages
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;4&lt;/code&gt; pages most visitors will see
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://alpha.service.canada.ca/home&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://alpha.service.canada.ca/about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://alpha.service.canada.ca/projects&quot;&gt;Projects&lt;/a&gt; (the ‘catalogue’)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://alpha.service.canada.ca/signup&quot;&gt;Sign up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;4&lt;/code&gt; prototypes of upcoming services&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s worth noting that the site is &lt;a href=&quot;https://www.canada.ca/en/government/system/digital-government/government-canada-digital-standards.html#ds2&quot;&gt;frequently being iterated on&lt;/a&gt;, so if it doesn’t look exactly like that by the time you’re reading this, that’s okay — it’s supposed to change over time. Luckily, we can also follow along on GitHub, where &lt;a href=&quot;https://github.com/DTS-STN/Alpha-Site&quot;&gt;the source code is publicly available for anyone to see&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;coding-in-the-open&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#coding-in-the-open&quot;&gt;&lt;span&gt;Coding in the open&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Maybe it seems kind of nerdy, but public source code is really valuable for government teams to release. As citizens, we typically only see final versions of things — online services, ad campaigns, reports, and so on. We get the finished product, but we don’t see how it came to be. By looking at the public source code, we get a lot of visibility into the progress of the team, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DTS-STN/Alpha-Site/commits/main?after=e2b07245c7a744e63a86edc0e598257018a1d38e+440&amp;amp;branch=main&quot;&gt;When it was first started&lt;/a&gt;: March 17&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DTS-STN/Alpha-Site/commits/main&quot;&gt;When the last change was&lt;/a&gt;: Yesterday (as of December 15, 2021)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DTS-STN/Alpha-Site/graphs/contributors&quot;&gt;How many people have worked on it&lt;/a&gt;: 15&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DTS-STN/Alpha-Site/graphs/commit-activity&quot;&gt;If the team works on Sundays&lt;/a&gt;: Only once (week of June 11)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When Canada’s federal Digital Standards call for “&lt;a href=&quot;https://www.canada.ca/en/government/system/digital-government/government-canada-digital-standards.html#ds3&quot;&gt;work[ing] in the open by default&lt;/a&gt;,” this is exactly what they are referring to. By making source code publicly available, we can get really good insights into the technical portion of the product. However, this is only half the story: there is also a submerged body of governance and compliance work that is much harder to quantify.&lt;/p&gt;
&lt;h3 id=&quot;measuring-the-hard-to-measure&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#measuring-the-hard-to-measure&quot;&gt;&lt;span&gt;Measuring the hard to measure&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When we talk about ‘data’, we’re usually talking about things that are easy to count and measure, but — as the cast of Rent knows — how do you measure a year(ly release)? (&lt;a href=&quot;https://www.youtube.com/watch?v=XNbwiGbETSQ&quot;&gt;In midnights? In cups of coffee?&lt;/a&gt;) Activities that don’t leave behind structured data can be pretty hard to quantify.&lt;/p&gt;
&lt;p&gt;For our website, it would be really interesting to measure things like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How many meetings were scheduled&lt;/li&gt;
&lt;li&gt;How many emails were sent&lt;/li&gt;
&lt;li&gt;Total number of people involved outside of the core team&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, given the crush of meetings and emails that myself and many of my colleagues had on a daily basis, reliably collecting this data isn’t really practical. My colleague &lt;a href=&quot;https://twitter.com/sboots&quot;&gt;Sean Boots&lt;/a&gt; built a &lt;a href=&quot;https://meetingcostcalculator.ca/&quot;&gt;Meeting Cost Calculator&lt;/a&gt;, but the underlying data we would need to plug into it isn’t available.&lt;/p&gt;
&lt;p&gt;So what &lt;em&gt;can&lt;/em&gt; we measure related to project governance? Well, let’s look at some artifacts we &lt;strong&gt;do&lt;/strong&gt; have: project documentation.&lt;/p&gt;
&lt;h3 id=&quot;internal-words&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#internal-words&quot;&gt;&lt;span&gt;Internal words&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;On the team, we used a shared folder for all the documents and diagrams created in the process of launching the site. All together, we have 45 documents.&lt;/p&gt;
&lt;p&gt;But “45 documents” on its own doesn’t tell us much. What we want to know is how much effort they represent: what’s actually &lt;em&gt;in&lt;/em&gt; these documents? In other words, how much relevant, original text did real people (including me) have to write to get this site over the line?&lt;/p&gt;
&lt;p&gt;To try and quantify this, I opened every document (ignoring duplicates and diagrams), selected all the original text (removing templated content), pasted all of it into a new doc, and did a quick word count.&lt;/p&gt;
&lt;p&gt;&lt;sub&gt;&lt;span aria-hidden=&quot;true&quot;&gt;🥁&lt;/span&gt; Drumroll please… &lt;span aria-hidden=&quot;true&quot;&gt;🥁&lt;/span&gt;&lt;/sub&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;39 230&lt;/code&gt; (!) words&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you add up all the original (&lt;em&gt;non copy+pasted&lt;/em&gt;) text in our various documents, presentations, justifications, and rationales, we get 39,230 words, which — to me — sounds like a lot of words.&lt;/p&gt;
&lt;h4 id=&quot;how-many-words-is-a-lot-of-words&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#how-many-words-is-a-lot-of-words&quot;&gt;&lt;span&gt;How many words is a lot of words?&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;But &lt;em&gt;is it&lt;/em&gt; a lot of words? Of course, thirty-nine thousand and change sounds like a lot but what can we compare this to?&lt;/p&gt;
&lt;p&gt;I went looking for comparisons and I found a listing of &lt;a href=&quot;http://commonplacebook.com/art/books/word-count-for-famous-novels/&quot;&gt;word counts for famous novels&lt;/a&gt;. If we pull out a couple, this is where we sit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;36 363&lt;/code&gt; words: &lt;em&gt;The Lion, the Witch, and the Wardrobe&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;39 230&lt;/code&gt; words: compliance documentation for our 12-page website&lt;/li&gt;
&lt;li&gt;&lt;code&gt;47 094&lt;/code&gt; words: &lt;em&gt;The Great Gatsby&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So we are in good company here, sandwiched between a beloved children’s novel and a classic tale of superficial excess.&lt;/p&gt;
&lt;p&gt;Incidentally, November (so recently past) is “&lt;a href=&quot;https://nanowrimo.org/&quot;&gt;National Novel Writing Month&lt;/a&gt;”: the goal of which is to write a 50k word novel, something we were only a few documents short of achieving.&lt;/p&gt;
&lt;p&gt;And none of this is user-facing, mind you. Those 39,230 words represent only &lt;em&gt;the tax&lt;/em&gt; we paid to move our project through all the various internal groups and committees. Since none of that work is available to the public, even if we were writing the next Great Canadian Federal Novel (we weren’t), you would never get to see it.&lt;/p&gt;
&lt;h3 id=&quot;public-words&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#public-words&quot;&gt;&lt;span&gt;Public words&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;What about the words that &lt;em&gt;are&lt;/em&gt; user-facing? I’ve said a few times that it’s a small website, so maybe I should qualify that. I’ve counted nearly 40k words of internal documentation, but what is the word count of the actual site itself?&lt;/p&gt;
&lt;p&gt;As I mentioned earlier, there are 12 individual pages, if you know where to find them — and since I was on the team, I did know where to find them. Pretty basic methodology again here: select all the text on the screen, paste into a large document, and grab a word count once you finish with all the pages.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;4 305&lt;/code&gt; words&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, 4,305 words is nothing to sneeze at, but it’s hardly going to be accepted as &lt;a href=&quot;https://nanowrimo.org/sign-up&quot;&gt;our NaNoWriMo submission&lt;/a&gt;. In fact, if we do a bit of math, we get this.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;39,230 / 4,305 = 9.11&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Rounding down, we’re looking at roughly a 9:1 ratio of internal vs. external content. To put that another way, &lt;strong&gt;for every 10 words we write on this team, 1 word is for the site itself — the actual thing we are trying to release — and 9 words are for internal governance&lt;/strong&gt;, to be read once or twice (if ever), and then filed away somewhere.&lt;/p&gt;
&lt;p&gt;In our case, it meant that for our 12-page site, we ended up writing almost as much as the Great Gatsby.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Never was so much written by so few for no reason.”&lt;br /&gt;
— Winston Churchill once said, referring to our website.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;how-did-we-get-here&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#how-did-we-get-here&quot;&gt;&lt;span&gt;How did we get here?&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;So I’ve written a lot about the &lt;em&gt;volume&lt;/em&gt; of documentation, but I haven’t touched on the content itself. We were building a small site which, at launch, was assessed having &lt;strong&gt;no&lt;/strong&gt; sensitive data — in theory this should mitigate potential security and privacy concerns. Given that, how was it that we ended up writing so much for such a small deliverable? For me, the answer stems from systemic assumptions — what you might call an ‘organizational common sense’ — around managing risk, which, over time, have created a culture of amateur novel writing.&lt;/p&gt;
&lt;p&gt;Here’s an example.&lt;/p&gt;
&lt;h3 id=&quot;the-content-management-system-an-example&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#the-content-management-system-an-example&quot;&gt;&lt;span&gt;The Content Management System: an example&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;On our team, we had several developers and two content writers. When a content writer wanted to change some text on the site, they would email those changes to developers, who would update the code. Emailing updates like this can introduce tension into the team. The person sending the change wants to see it quickly, which means interrupting the developer from whatever they were working on. The more often this happens, the more guilty the content writer feels and the more annoyed the developer gets.&lt;/p&gt;
&lt;p&gt;Enabling content writers to edit the content directly relieves this tension: by using a Content Management System (CMS), a content writer can log in, update the text, and press “Publish”. Now developers can work on other tasks and content writers can make changes whenever they want. But there is a tradeoff here: setting up and maintaining a CMS creates work for developers. If the content doesn’t change that often, maybe sending emails is good enough. Ultimately, it comes down to team preference. Does it save us time? Is this how we want to work together? What if we try it out? If it works, let’s keep using it. If it doesn’t work, let’s get rid of it.&lt;/p&gt;
&lt;p&gt;Our team eventually decided to add a CMS, so we picked one that worked for us and set it up.&lt;/p&gt;
&lt;p&gt;There are a bunch of (valid) questions that arise when adding a CMS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Who gets an account?&lt;/li&gt;
&lt;li&gt;What permissions does each account have?&lt;/li&gt;
&lt;li&gt;What are the password rules like?&lt;/li&gt;
&lt;li&gt;What is the vetting process for allowing new users?&lt;/li&gt;
&lt;li&gt;What is the onboarding process for new users?&lt;/li&gt;
&lt;li&gt;What is the decommissioning process for accounts that are no longer needed?&lt;/li&gt;
&lt;li&gt;Why don’t the accounts integrate with Outlook accounts people already have?&lt;/li&gt;
&lt;li&gt;Who has administrator privileges to the infrastructure?&lt;/li&gt;
&lt;li&gt;What is the plan if it stops working?&lt;/li&gt;
&lt;li&gt;What other CMSes did you look at?&lt;/li&gt;
&lt;li&gt;What was your analyses of the other CMSes?&lt;/li&gt;
&lt;li&gt;(etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are the kinds of questions internal compliance teams will ask (and many more!). But is it worth asking them all in our case? Let’s imagine two opposing opinions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Opinion 1&lt;/strong&gt;: These are all important and necessary questions to have answered before a site can be released, &lt;em&gt;especially&lt;/em&gt; in a government context where we have to consider any possible security implications and/or a loss of reputation. This CMS is new to the organization. All new technology requires need comprehensive documentation around how it works, how it will be used, by whom, and how it will be supported in the future.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Opinion 2&lt;/strong&gt;: The team has found something that improves their workflow and it is only being used by the 5 people on the team. The site is assessed as &lt;em&gt;not&lt;/em&gt; having sensitive data and the ‘reputational risk’ of an occasional typo isn’t that serious. Yes, it’s a new CMS but it only affects this one team, and they don’t even know if they want to keep using this 6 months down the road. Let’s skip the documentation for now and see how it goes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is plenty of middle ground in the space between each of these perspectives, but, in practice, we ended up very close to Opinion 1. While there is an important principle represented by the “comprehensive documentation” opinion, there is almost no consideration given to the context of the project. The CMS &lt;em&gt;was&lt;/em&gt; a new technology, so that represented a risk. However, there were significant mitigating factors. It didn’t impact any other teams, it didn’t have any sensitive data, and there were only 5 accounts — all for people we worked with directly.&lt;/p&gt;
&lt;p&gt;Zooming out a bit, our team identified a way to improve how we work together, spent a couple days putting together a potential solution, and that could have been it: let’s see how it goes and re-evaluate in a few months.&lt;/p&gt;
&lt;p&gt;Instead, a culture of ‘everything new must be comprehensively documented upfront, no exceptions’ meant putting together huge amounts of documentation (maybe 6-7 thousand words of), all before getting the practical experience to know for sure if this CMS was something we wanted to stick with long-term.&lt;/p&gt;
&lt;p&gt;The ‘organizational common-sense’ operating here is that &lt;strong&gt;more&lt;/strong&gt; documentation equals &lt;strong&gt;less&lt;/strong&gt; risk. If some problem occurs in the future, you can refer to documentation which (hopefully &lt;span aria-hidden=&quot;true&quot;&gt;🤞&lt;/span&gt;) describes how that problem should be handled. Therefore, any time we introduce a &lt;em&gt;new&lt;/em&gt; technology or a trial &lt;em&gt;new&lt;/em&gt; way of doing things — anything we can’t copy and paste from a previous document — it is &lt;em&gt;really important&lt;/em&gt; that it is heavily documented.&lt;/p&gt;
&lt;p&gt;Unfortunately, the unaccounted-for long-term risk is one where high-effort processes suffocate grassroots learning and experimentation, leading to organizational stagnation. Our team was looking to save ~45 minutes a week, so we picked up a new technology as a potential remediation. Unwittingly, this meant signing up for ~40-60 hours of documenting, diagraming, presenting, justifying, etc — far outweighing the potential benefit of the CMS. Something that was meant to optimize the team’s workflow and relieve a mild inefficiency turned into a black hole of effort: consuming hours and hours of time for documentation that few people will ever read.&lt;/p&gt;
&lt;p&gt;When the cost of trialling new things is so punishing, it is not practical or even rational to try. Eventually, you end up in a situation where “&lt;a href=&quot;https://www.cbc.ca/news/politics/federal-it-systems-critical-failure-1.5448871&quot;&gt;aging government computer systems [...] are pushing 60 years old and built on ‘outdated technology’ that can no longer be maintained&lt;/a&gt;,” as reported by the CBC.&lt;/p&gt;
&lt;h2 id=&quot;the-way-forward-when-less-is-better&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-15-paperweight/#the-way-forward-when-less-is-better&quot;&gt;&lt;span&gt;The way forward: when less is better&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the department, the expectation for new technology and new approaches was understood to be about &lt;em&gt;speeding up&lt;/em&gt; development cycles in the service of better meeting the needs of &lt;em&gt;end users&lt;/em&gt;. However, accompanying changes to internal compliance were &lt;a href=&quot;https://sboots.ca/2020/01/28/introducing-agile-to-large-organizations-is-a-subtractive-process-not-an-additive-one/&quot;&gt;a purely additive process&lt;/a&gt; that &lt;em&gt;slowed down&lt;/em&gt; the team with excessive paperwork, resulting in a much greater focus on &lt;em&gt;internal gatekeepers&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Instead of adopting an attitude of ‘let’s see what makes sense for this application,’ it was treated more like ‘let’s do everything we currently do, plus extra documentation now that we’re adding new technology.’ Rather than adding ever more checks and imbalances to procedures created decades ago, we need to engage with the question of whether burying teams under reams of paper results in &lt;em&gt;any&lt;/em&gt; measurably better outcomes for Canadians.&lt;/p&gt;
&lt;p&gt;Again, I’m not saying we shouldn’t have &lt;em&gt;any&lt;/em&gt; compliance processes — of course we need security reviews and internal documentation of some kind. But above all we need procedures that are &lt;em&gt;proportional&lt;/em&gt; to the outcomes, that &lt;em&gt;adapt&lt;/em&gt; to changing situations.&lt;/p&gt;
&lt;p&gt;“But isn’t excessive paperwork just ‘how government works?’”, I hear you asking. Well, ‘how government works’ changes over time. Small, nimble teams with more autonomy and dramatically less overhead have become a norm in the UK, where they have an even larger government than ours. In my previous life as a UK civil servant, if I had wanted to introduce a CMS to a small site with no sensitive data, I would have needed buy-in from my team and to write maybe 1 page of explanation. There’s no reason we can’t take the same approach here in Canada.&lt;/p&gt;
&lt;p&gt;Hoping for different outcomes without reducing the overhead of internal procedures will only get us so far. Currently, many government teams spend an inordinate proportion of effort managing internal stakeholders instead of focusing on external users. We need to &lt;strong&gt;create space for teams to use their judgement&lt;/strong&gt; and &lt;strong&gt;lower the cost of experimentation&lt;/strong&gt; if we are to realize the ideal of a truly responsive, citizen-centric government.&lt;/p&gt;
&lt;p&gt;Ultimately, we can’t build the services of the future without letting go of the assumptions of the past.&lt;/p&gt;

    </content>
  </entry>
  <entry>
    <title>Introducing Federal Field Notes</title>
    <link href="https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/" />
    <updated>2021-12-12T00:00:00Z</updated>
    <id>https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/</id>
    <content type="html">
        &lt;nav class=&quot;table-of-contents&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#obligatory-disclaimer&quot;&gt;Obligatory Disclaimer&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#the-pitch&quot;&gt;The pitch&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#why-should-i-listen-to-you&quot;&gt;Why should I listen to you?&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#open-by-default&quot;&gt;Open by default&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#closed-by-default&quot;&gt;Closed by default&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#make-things-open&quot;&gt;Make things open&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#whats-the-angle&quot;&gt;What’s the angle?&lt;/a&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#the-whole-story&quot;&gt;The whole story&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/nav&gt;&lt;h2 id=&quot;obligatory-disclaimer&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#obligatory-disclaimer&quot;&gt;&lt;span&gt;Obligatory Disclaimer&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This should go without saying, but just to be totally explicit:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The views and opinions expressed here are credited to individual authors (currently: &lt;a href=&quot;https://twitter.com/pcraig3&quot;&gt;me&lt;/a&gt;) and don’t reflect the views of teammates or employers&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&quot;the-pitch&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#the-pitch&quot;&gt;&lt;span&gt;The pitch&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Federal Field Notes is a newsletter about digital transformation in the federal Government of Canada (GoC), written from first-hand experience. It catalogues the ups and downs of working to create a more responsive, empathetic, and user-centred public service. &lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#bd-email&quot;&gt;Tune in&lt;/a&gt; for interesting stories, useful observations, and practical advice.&lt;/p&gt;
&lt;h2 id=&quot;why-should-i-listen-to-you&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#why-should-i-listen-to-you&quot;&gt;&lt;span&gt;Why should I listen to you?&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Fair question.&lt;/p&gt;
&lt;p&gt;I’ve worked in government for the better part of a decade now: I was ~3 years at the &lt;a href=&quot;https://gds.blog.gov.uk/about/&quot;&gt;Government Digital Service (GDS)&lt;/a&gt; in the UK, and I’ve been nearly 4 years in Canada, mostly at the &lt;a href=&quot;https://digital.canada.ca/&quot;&gt;Canadian Digital Service (CDS)&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;open-by-default&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#open-by-default&quot;&gt;&lt;span&gt;Open by default&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;At GDS, I spent the majority of my time working as a Developer on the (&lt;a class=&quot;Footnotes__ref&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#digital-marketplace-note&quot; id=&quot;digital-marketplace-ref&quot; aria-describedby=&quot;footnotes-label&quot; role=&quot;doc-noteref&quot;&gt;UK’s&lt;/a&gt;) &lt;a href=&quot;https://www.digitalmarketplace.service.gov.uk/&quot;&gt;Digital Marketplace&lt;/a&gt;, but also &lt;a href=&quot;https://gds.blog.gov.uk/tag/performance-platform/&quot;&gt;the (erstwhile) Performance Platform&lt;/a&gt; (&lt;abbr title=&quot;Rest in Peace&quot;&gt;RIP&lt;/abbr&gt;), and, very briefly, on &lt;a href=&quot;https://www.notifications.service.gov.uk/&quot;&gt;GOV.UK Notify&lt;/a&gt;. As a civil servant for the UK government, I was always on design-led multidisciplinary teams with autonomy over their technical stack and product decisions. We used modern technology, regularly tested upcoming features with users, set up continuous integration for daily releases, and put nearly all of our work on into &lt;a href=&quot;https://github.com/alphagov&quot;&gt;public Github repositories&lt;/a&gt;. In sum, we were following &lt;a href=&quot;https://www.canada.ca/en/government/system/digital-government/government-canada-digital-standards.html&quot;&gt;the Government of Canada’s Digital Standards Playbook&lt;/a&gt; to the letter. &lt;span aria-hidden=&quot;true&quot;&gt;😉&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Moving back to Canada in 2018, I was surprised to learn how closed-off our government culture is by contrast, where many (most?) federal public servants don’t have an easy way to publicly share the work they do everyday.&lt;/p&gt;
&lt;h3 id=&quot;closed-by-default&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#closed-by-default&quot;&gt;&lt;span&gt;Closed by default&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;From what I’ve experienced, traditional Canadian government culture is fairly opaque, mostly due to over-calibrated assumptions around risk: eg, that teams communicating openly with the public may cause public embarrassment or leak details of upcoming work that they aren’t supposed to.&lt;/p&gt;
&lt;p&gt;“What if this ends up in the Globe?” is a sentiment heard quite a few times, implying that media stories that aren’t carefully managed are necessarily bad news. Compare this to GDS in the UK, whose early successes resulted in &lt;a href=&quot;https://www.theguardian.com/government-computing-network/2012/jul/25/cabinet-office-transactional-services-data-gds&quot;&gt;many&lt;/a&gt; &lt;a href=&quot;https://www.theguardian.com/technology/2012/nov/06/government-services-digital-default-save&quot;&gt;positive&lt;/a&gt; &lt;a href=&quot;https://www.theguardian.com/technology/2013/nov/15/government-digital-service-best-startup-europe-invest&quot;&gt;media&lt;/a&gt; &lt;a href=&quot;https://www.theguardian.com/public-leaders-network/2014/sep/08/local-government-digital-service-gds&quot;&gt;mentions&lt;/a&gt;, or COVID Alert, &lt;a href=&quot;https://www.michaelgeist.ca/2020/08/why-i-installed-the-covid-alert-app&quot;&gt;specifically&lt;/a&gt; &lt;a href=&quot;https://globalnews.ca/news/7263448/coronavirus-covid-19-tracing-app-canada-how-it-works/&quot;&gt;lauded&lt;/a&gt; for its &lt;a href=&quot;https://sboots.ca/2020/10/30/working-in-the-open-firsts-for-covid-alert/&quot;&gt;openness&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A culture of silence is bad for all of us: for public servants who can’t (or don’t &lt;em&gt;feel&lt;/em&gt; they can) easily share the interesting work they do, and for the public, who often distrust what they perceive as a large, inscrutable organization, unable to see the many motivated and passionate individuals working on their behalf.&lt;/p&gt;
&lt;h3 id=&quot;make-things-open&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#make-things-open&quot;&gt;&lt;span&gt;Make things open&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The UK’s highly successful government digital transformation was predicated on &lt;a href=&quot;https://gds.blog.gov.uk/2014/07/22/making-things-open-making-things-better/&quot;&gt;a culture of transparency&lt;/a&gt;: working in the open, blogging frequently, encouraging public involvement/discussion, and a strong commitment to plain language. (Check out GDS’ “&lt;a href=&quot;https://www.gov.uk/guidance/style-guide/a-to-z-of-gov-uk-style#words-to-avoid&quot;&gt;Words to avoid&lt;/a&gt;” in their plain-language guide — see how many you come across regularly.)&lt;/p&gt;
&lt;p&gt;As an example of this, the UK team working on a new government identity platform &lt;a href=&quot;https://gds.blog.gov.uk/category/id-assurance/&quot;&gt;is blogging openly about their progress&lt;/a&gt;, even &lt;a href=&quot;https://gds.blog.gov.uk/2021/12/01/one-login-for-government-december-2021-update/&quot;&gt;talking to an impressive 720 &lt;em&gt;end users&lt;/em&gt; in 7 months&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Federal Field Notes continues this all-important tradition of government transparency.&lt;/p&gt;
&lt;h2 id=&quot;whats-the-angle&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#whats-the-angle&quot;&gt;&lt;span&gt;What’s the angle?&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;What I’m aiming to do here is open up a place to talk about digital government in Canada in a way that’s &lt;a href=&quot;https://sboots.ca/2020/03/03/find-the-truth-tell-the-truth/&quot;&gt;honest&lt;/a&gt;, insightful, and a little irreverent. Government IT transformation is hard, but it doesn’t have to be boring.&lt;/p&gt;
&lt;h3 id=&quot;the-whole-story&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://federal-field-notes.ca/articles/2021-12-12-introducing-federal-field-notes/#the-whole-story&quot;&gt;&lt;span&gt;The whole story&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I find a lot of public discussions about digital transformation in the GoC are couched in a kind of relentless positivity — obviously it’s great to trumpet your wins, but this only tells half of the story.&lt;/p&gt;
&lt;p&gt;While there have been many successful modern digital services released in Canada, there are also years-long initiatives that don’t ever seem to ship, and motivated teams who end up stalled or burnt out under reams of &lt;a href=&quot;https://federal-field-notes.ca/articles/2021-12-13-paperweight/&quot;&gt;onerous oversight&lt;/a&gt;. All to say, there are &lt;em&gt;plenty&lt;/em&gt; of lessons being learned across government that would be helpful to share with other culturally-aligned teams.&lt;/p&gt;
&lt;p&gt;This site is &lt;strong&gt;not&lt;/strong&gt; about criticizing specific individuals or committees, leaking secret or upcoming projects, or for commenting on government policies. Rather, my intent is to highlight structural tendencies and patterns of behaviour, and to uncover issues or propose possible strategies that may, ultimately, help to create a more reponsive government, &lt;a href=&quot;https://gds.blog.gov.uk/2011/07/29/welcome-to-the-government-digital-service-blog/&quot;&gt;relentlessly focused on user needs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My colleague &lt;a href=&quot;https://twitter.com/sboots&quot;&gt;Sean Boots&lt;/a&gt; has a great blog post &lt;a href=&quot;https://sboots.ca/2020/01/21/principles-for-blogging-as-a-public-servant/&quot;&gt;on blogging as a public servant&lt;/a&gt;, where he effectively sums up the goal as:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The approach I want to champion is: openly criticizing things that are systemically broken, while still acting with the respect and integrity that public servants are meant to embody.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That is to say, it’s not about airing dirty laundry, more about pointing out how the washing machine shreds all of our good shirts.&lt;/p&gt;
&lt;p&gt;If that sounds interesting to you, give it a try and subscribe &lt;span aria-hidden=&quot;true&quot;&gt;👇&lt;/span&gt;. If not, well, you should subscribe anyway: you will rarely get emails from me and &lt;a href=&quot;https://federal-field-notes.ca/pages/about/#what-happens-if-i-subscribe&quot;&gt;you just might win an iPod&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Have feedback, or want to leave a comment? I couldn’t figure out how to set up commenting with eleventy (might do it later if comments are something people want), but I have opened up &lt;a href=&quot;https://github.com/pcraig3/fed-notes/discussions&quot;&gt;Discussions in the Github repo&lt;/a&gt;. Feel free to leave a comment in there, or you can always &lt;a href=&quot;https://federal-field-notes.ca/pages/contact&quot;&gt;Contact me&lt;/a&gt; directly.&lt;/p&gt;

    </content>
  </entry>
</feed>